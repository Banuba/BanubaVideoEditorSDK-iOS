// Generated by Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
#ifndef BANUBAVIDEOEDITORSDK_SWIFT_H
#define BANUBAVIDEOEDITORSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import BanubaMusicEditorSDK;
@import CoreGraphics;
@import CoreMedia;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="BanubaVideoEditorSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


enum ButtonType : NSInteger;
@class ImageConfiguration;
@class TextButtonConfiguration;
enum TitlePosition : NSInteger;
enum AdditionalEffectsButtonConfigurationPosition : NSInteger;
@class UIColor;

/// The effect button configuration.
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK36AdditionalEffectsButtonConfiguration")
@interface AdditionalEffectsButtonConfiguration : NSObject
/// The button Identifier
@property (nonatomic) enum ButtonType identifier;
/// The image which will be used in normal state
@property (nonatomic, strong) ImageConfiguration * _Nonnull imageConfiguration;
/// The image which will be used in selected state
@property (nonatomic, strong) ImageConfiguration * _Nullable selectedImageConfiguration;
/// The button title style and text configuration
@property (nonatomic, strong) TextButtonConfiguration * _Nullable title;
/// The title position
@property (nonatomic) enum TitlePosition titlePosition;
/// The button width
@property (nonatomic) CGFloat width;
/// The button height
@property (nonatomic) CGFloat height;
/// The button position. This property is not supported at all screens
@property (nonatomic) enum AdditionalEffectsButtonConfigurationPosition position;
/// The spacing value between image and title
@property (nonatomic) CGFloat imageTitleSpacing;
/// The title alpha value when effect is not selected.
/// Default value is 1.0
@property (nonatomic) CGFloat defaultTitleAlpha;
/// The title alpha value when effect is selected
/// Default value is 1.0
@property (nonatomic) CGFloat selectedTitleAlpha;
/// The button layer corner radius
/// Default value is 0.0
@property (nonatomic) CGFloat cornerRadius;
/// The button background color
/// Default value is clear
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
/// Initializes and returns the toast configuration object with specified configurations.
- (nonnull instancetype)initWithIdentifier:(enum ButtonType)identifier imageConfiguration:(ImageConfiguration * _Nonnull)imageConfiguration selectedImageConfiguration:(ImageConfiguration * _Nullable)selectedImageConfiguration title:(TextButtonConfiguration * _Nullable)title titlePosition:(enum TitlePosition)titlePosition width:(CGFloat)width height:(CGFloat)height position:(enum AdditionalEffectsButtonConfigurationPosition)position imageTitleSpacing:(CGFloat)imageTitleSpacing defaultTitleAlpha:(CGFloat)defaultTitleAlpha selectedTitleAlpha:(CGFloat)selectedTitleAlpha cornerRadius:(CGFloat)cornerRadius backgroundColor:(UIColor * _Nonnull)backgroundColor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, AdditionalEffectsButtonConfigurationPosition, open) {
  AdditionalEffectsButtonConfigurationPositionTop = 100,
  AdditionalEffectsButtonConfigurationPositionBottom = 200,
  AdditionalEffectsButtonConfigurationPositionCenter = 300,
};

typedef SWIFT_ENUM(NSInteger, ButtonType, open) {
  ButtonTypeLink = 0,
  ButtonTypeColor = 1,
  ButtonTypeSticker = 2,
  ButtonTypeText = 3,
  ButtonTypeTime = 4,
  ButtonTypeSound = 5,
  ButtonTypeEffects = 6,
  ButtonTypeToggle = 7,
  ButtonTypeFlashlight = 8,
  ButtonTypeTimer = 9,
  ButtonTypeSpeed = 10,
  ButtonTypeBeauty = 11,
  ButtonTypeMasks = 12,
  ButtonTypeMuteSound = 13,
  ButtonTypeInteractive = 14,
};

typedef SWIFT_ENUM(NSInteger, TitlePosition, open) {
  TitlePositionTop = 0,
  TitlePositionLeft = 1,
  TitlePositionRight = 2,
  TitlePositionBottom = 3,
  TitlePositionInitial = 4,
};

@class BackButtonConfiguration;

/// The Albums configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK19AlbumsConfiguration")
@interface AlbumsConfiguration : NSObject
/// TextButtonConfiguration setups title button style
@property (nonatomic, strong) TextButtonConfiguration * _Nonnull textButton;
/// BackButtonConfiguration setups back button style
@property (nonatomic, strong) BackButtonConfiguration * _Nonnull backButton;
- (nonnull instancetype)initWithTextButton:(TextButtonConfiguration * _Nonnull)textButton backButton:(BackButtonConfiguration * _Nonnull)backButton OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class UIFont;

/// The Alert view configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK22AlertViewConfiguration")
@interface AlertViewConfiguration : NSObject
/// Container corner radius
@property (nonatomic) CGFloat cornerRadius;
/// Buttons’ radius
@property (nonatomic) CGFloat buttonRadius;
/// Refuse button background color
@property (nonatomic, strong) UIColor * _Nonnull refuseButtonBackgroundColor;
/// Refuse button text color
@property (nonatomic, strong) UIColor * _Nonnull refuseButtonTextColor;
/// Agree button background color
@property (nonatomic, strong) UIColor * _Nonnull agreeButtonBackgroundColor;
/// Agree button text color
@property (nonatomic, strong) UIColor * _Nonnull agreeButtonTextColor;
/// Main title aligment
@property (nonatomic) NSTextAlignment titleAligment;
/// Main title font
@property (nonatomic, strong) UIFont * _Nonnull titleFont;
/// Buttons’ font
@property (nonatomic, strong) UIFont * _Nonnull buttonsFont;
- (nonnull instancetype)initWithCornerRadius:(CGFloat)cornerRadius buttonRadius:(CGFloat)buttonRadius refuseButtonBackgroundColor:(UIColor * _Nonnull)refuseButtonBackgroundColor refuseButtonTextColor:(UIColor * _Nonnull)refuseButtonTextColor agreeButtonBackgroundColor:(UIColor * _Nonnull)agreeButtonBackgroundColor agreeButtonTextColor:(UIColor * _Nonnull)agreeButtonTextColor titleAligment:(NSTextAlignment)titleAligment titleFont:(UIFont * _Nonnull)titleFont buttonsFont:(UIFont * _Nonnull)buttonsFont OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC20BanubaVideoEditorSDK19AlertViewController")
@interface AlertViewController : UIViewController
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end







SWIFT_CLASS("_TtC20BanubaVideoEditorSDK12AudioService")
@interface AudioService : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class AVAudioPlayer;

@interface AudioService (SWIFT_EXTENSION(BanubaVideoEditorSDK)) <AVAudioPlayerDelegate>
- (void)audioPlayerDidFinishPlaying:(AVAudioPlayer * _Nonnull)player successfully:(BOOL)flag;
@end


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK11AudioWriter")
@interface AudioWriter : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class AVAudioRecorder;

@interface AudioWriter (SWIFT_EXTENSION(BanubaVideoEditorSDK)) <AVAudioRecorderDelegate>
- (void)audioRecorderEncodeErrorDidOccur:(AVAudioRecorder * _Nonnull)recorder error:(NSError * _Nullable)error;
- (void)audioRecorderDidFinishRecording:(AVAudioRecorder * _Nonnull)recorder successfully:(BOOL)flag;
@end


enum Position : NSInteger;

/// The back button configuration.
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK23BackButtonConfiguration")
@interface BackButtonConfiguration : NSObject
/// The default button state image configuration.
@property (nonatomic, strong) ImageConfiguration * _Nonnull imageConfiguration;
/// The selected button state image configuration.
@property (nonatomic, strong) ImageConfiguration * _Nullable selectedImageConfiguration;
/// The button position configuration.
@property (nonatomic) enum Position position;
/// Initializes and returns the back button configuration object with specified configurations.
- (nonnull instancetype)initWithImageConfiguration:(ImageConfiguration * _Nonnull)imageConfiguration selectedImageConfiguration:(ImageConfiguration * _Nullable)selectedImageConfiguration position:(enum Position)position OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, Position, open) {
  PositionLeft = 0,
  PositionRight = 1,
};


/// The background configuration.
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK23BackgroundConfiguration")
@interface BackgroundConfiguration : NSObject
/// The view corner radius.
@property (nonatomic) CGFloat cornerRadius;
/// the view color.
@property (nonatomic, strong) UIColor * _Nonnull color;
/// Initializes and returns the background configuration object with specified configurations.
- (nonnull instancetype)initWithCornerRadius:(CGFloat)cornerRadius color:(UIColor * _Nonnull)color OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// The Banuba button configuration.
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK25BanubaButtonConfiguration")
@interface BanubaButtonConfiguration : NSObject
/// Image which will be used in the normal state
/// If image is nil, image will be not presented
/// Default value is nil.
@property (nonatomic, strong) ImageConfiguration * _Nullable imageConfiguration;
/// Image which will be used in selected state
@property (nonatomic, strong) TextButtonConfiguration * _Nonnull title;
/// Title positon
/// Default is bottom
@property (nonatomic) enum TitlePosition titlePosition;
/// Button width
/// Default value is 50.0.
@property (nonatomic) CGFloat width;
/// Button height
/// Default value is 50.0.
@property (nonatomic) CGFloat height;
/// Background configuration.
@property (nonatomic, strong) BackgroundConfiguration * _Nonnull background;
/// Spacing between image and title
/// Default is 0.0
@property (nonatomic) CGFloat imageTitleSpacing;
/// Initializes and returns the Banuba button configuration object with specified configurations.
- (nonnull instancetype)initWithTitle:(TextButtonConfiguration * _Nonnull)title titlePosition:(enum TitlePosition)titlePosition width:(CGFloat)width height:(CGFloat)height background:(BackgroundConfiguration * _Nonnull)background imageConfiguration:(ImageConfiguration * _Nullable)imageConfiguration imageTitleSpacing:(CGFloat)imageTitleSpacing OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol BanubaVideoEditorDelegate;
@class SDKService;
@class MusicEditorMetadata;
@class VideoEditorMetadata;
@class AVAsset;
@class AVAssetImageGenerator;
@class VideoEditorConfig;
@class UIImage;
@class ExportVideoConfiguration;

/// Video Editor main entity and entry point.
/// Can present and hide root view controller.
/// Has default export method.
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK17BanubaVideoEditor")
@interface BanubaVideoEditor : NSObject
/// Video editor delegate
@property (nonatomic, weak) id <BanubaVideoEditorDelegate> _Nullable delegate;
/// User canceled editing session
/// \param videoEditor video editor object informing the delegate about user action.
///
@property (nonatomic, copy) void (^ _Nullable videoEditorDidCancel)(BanubaVideoEditor * _Nonnull);
/// User finished editing session
/// \param videoEditor video editor object informing the delegate about user action.
///
@property (nonatomic, copy) void (^ _Nullable videoEditorDone)(BanubaVideoEditor * _Nonnull);
/// Service used to control camera module.
/// Also provides access to video editor services.
@property (nonatomic, readonly, strong) SDKService * _Nonnull sdk;
/// Simple metadata of music composition settings
@property (nonatomic, readonly, strong) MusicEditorMetadata * _Nullable musicMetadata;
/// Simple metadata of video composition settings and overlay objects
@property (nonatomic, readonly, strong) VideoEditorMetadata * _Nullable metadata;
/// Currently edited AVAsset if any
@property (nonatomic, readonly, strong) AVAsset * _Nullable asset;
/// Asset image generator which may be used for video preview image creation
@property (nonatomic, readonly, strong) AVAssetImageGenerator * _Nullable imageGenerator;
/// Current video editor configuration
@property (nonatomic, readonly, strong) VideoEditorConfig * _Nonnull currentConfiguration;
/// BanubaVideoEditorSDK constructor
/// \param token token used to be able for access Banuba modules
///
/// \param effectsToken token used to be able for access Banuba effects
///
/// \param cloudMasksToken token used to be able for access Banuba remote masks
///
/// \param configuration contains all neccesory configurations for the editor
///
- (nonnull instancetype)initWithToken:(NSString * _Nonnull)token effectsToken:(NSString * _Nonnull)effectsToken cloudMasksToken:(NSString * _Nullable)cloudMasksToken configuration:(VideoEditorConfig * _Nonnull)configuration OBJC_DESIGNATED_INITIALIZER;
/// Export video with default 1280x720 (or 1920x1080 on required devices) resolution
/// \param fileUrl url where exported video should be stored.
///
/// \param completion completion: (success, error), execute on background thread.
///
- (void)exportVideoWithFileUrl:(NSURL * _Nonnull)fileUrl completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
/// Export video with default 1280x720 (or 1920x1080 on required devices) resolution and cover image
/// \param fileUrl url where exported video should be stored.
///
/// \param completion completion: (success, error, image), execute on background thread.
///
- (void)exportVideoWithCoverImageWithFileUrl:(NSURL * _Nonnull)fileUrl completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable, UIImage * _Nonnull))completion;
/// Export several configurable video
/// \param configurations contains configurations for exporting videos such as file url,
/// watermark and video quality
///
/// \param completion completion: (success, error), execute on background thread.
///
- (void)exportVideosUsing:(NSArray<ExportVideoConfiguration *> * _Nonnull)configurations completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
/// Export several configurable video with cover image
/// \param configurations contains configurations for exporting videos such as file url,
/// watermark and video quality
///
/// \param completion completion: (success, error, image), execute on background thread.
///
- (void)exportVideosWithCoverImageUsing:(NSArray<ExportVideoConfiguration *> * _Nonnull)configurations completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable, UIImage * _Nonnull))completion;
/// Export audio from video
/// \param fileUrl url where exported video should be stored.
///
/// \param completion completion: (success, error), execute on background thread.
///
- (void)exportAudioWithFileUrl:(NSURL * _Nonnull)fileUrl completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
/// Clear all session metadata
- (void)clearSessionData;
/// Dismiss Videoeditor’s root view controller
/// \param animated Pass true to animate the transition.
///
/// \param completion The block to execute after the view controller is dismissed.
///
- (void)dismissVideoEditorWithAnimated:(BOOL)animated completion:(void (^ _Nullable)(void))completion;
/// Modally presents Video editor’s root view controller
/// \param hostController The view controller to display over.
///
/// \param animated Pass true to animate the presentation.
///
/// \param musicTrack Music track which will be played on camera recording.
///
/// \param completion The block to execute after the presentation finishes.
///
- (void)presentVideoEditorFrom:(UIViewController * _Nonnull)hostController animated:(BOOL)animated completion:(void (^ _Nullable)(void))completion;
/// Update video editor configuration
/// \param config The new version of configuration
///
- (void)updateVideoEditorConfig:(VideoEditorConfig * _Nonnull)config;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// Video Editor Delegate
SWIFT_PROTOCOL("_TtP20BanubaVideoEditorSDK25BanubaVideoEditorDelegate_")
@protocol BanubaVideoEditorDelegate
/// User canceled editing session
/// \param videoEditor video editor object informing the delegate about user action.
///
- (void)videoEditorDidCancel:(BanubaVideoEditor * _Nonnull)videoEditor;
/// User finished editing session
/// \param videoEditor video editor object informing the delegate about user action.
///
- (void)videoEditorDone:(BanubaVideoEditor * _Nonnull)videoEditor;
@end


typedef SWIFT_ENUM(NSInteger, CaptureButtonMode, open) {
  CaptureButtonModeVideo = 0,
  CaptureButtonModeMixed = 1,
};


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK20ColorOnVideoMetadata")
@interface ColorOnVideoMetadata : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK9ColorPair")
@interface ColorPair : NSObject
@property (nonatomic, readonly, strong) UIColor * _Nonnull background;
@property (nonatomic, readonly, strong) UIColor * _Nonnull foreground;
- (nonnull instancetype)initWithBackground:(UIColor * _Nonnull)background foreground:(UIColor * _Nonnull)foreground OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK11ColorParams")
@interface ColorParams : NSObject
- (nonnull instancetype)initWithRed:(float)red green:(float)green blue:(float)blue alpha:(float)alpha OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class VideoResolutionConfiguration;
@class GalleryItemConfiguration;
@class ImageButtonConfiguration;
@class SaveButtonConfiguration;
@class TextConfiguration;
@class GalleryLayoutConfiguration;

/// The Combined gallery configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK28CombinedGalleryConfiguration")
@interface CombinedGalleryConfiguration : NSObject
/// VideoResolutionConfiguration setups editor options for rendering video
@property (nonatomic, strong) VideoResolutionConfiguration * _Nonnull videoResolution;
/// GalleryItemConfiguration setups gallery item style for collection view cell
@property (nonatomic, strong) GalleryItemConfiguration * _Nonnull galleryItemConfiguration;
/// ImageButtonConfiguration setups close button style
@property (nonatomic, strong) ImageButtonConfiguration * _Nonnull closeButtonConfiguration;
/// TextButtonConfiguration setups album button style
@property (nonatomic, strong) TextButtonConfiguration * _Nonnull albumButtonConfiguration;
/// SaveButtonConfiguration setups next button style
@property (nonatomic, strong) SaveButtonConfiguration * _Nonnull nextButtonConfiguration;
/// TextConfiguration setups ‘no photos’ and ‘no videos’ label title style
@property (nonatomic, strong) TextConfiguration * _Nonnull noItemsLabelConfiguration;
/// GalleryLayoutConfiguration setups collection view layout for gallery items
@property (nonatomic, strong) GalleryLayoutConfiguration * _Nonnull layoutConfiguration;
/// Top bar blur color
@property (nonatomic, strong) UIColor * _Nonnull topBarBlurColor;
/// ImageButtonConfiguration setups clear selection button style
@property (nonatomic, strong) ImageButtonConfiguration * _Nonnull clearSelectionButtonConfiguration;
/// TextButtonConfiguration setups gallery type buttons’ style
@property (nonatomic, strong) TextButtonConfiguration * _Nonnull galleryTypeButton;
/// Color for underline view
@property (nonatomic, strong) UIColor * _Nonnull galleryTypeUnderlineColor;
/// Setups gallery state with video only
@property (nonatomic) BOOL isVideoEnabled;
/// Setups gallery state with photo only
@property (nonatomic) BOOL isPhotoEnabled;
- (nonnull instancetype)initWithVideoResolution:(VideoResolutionConfiguration * _Nonnull)videoResolution galleryItemConfiguration:(GalleryItemConfiguration * _Nonnull)galleryItemConfiguration closeButtonConfiguration:(ImageButtonConfiguration * _Nonnull)closeButtonConfiguration albumButtonConfiguration:(TextButtonConfiguration * _Nonnull)albumButtonConfiguration nextButtonConfiguration:(SaveButtonConfiguration * _Nonnull)nextButtonConfiguration layoutConfiguration:(GalleryLayoutConfiguration * _Nonnull)layoutConfiguration topBarBlurColor:(UIColor * _Nonnull)topBarBlurColor clearSelectionButtonConfiguration:(ImageButtonConfiguration * _Nonnull)clearSelectionButtonConfiguration noItemsLabelConfiguration:(TextConfiguration * _Nonnull)noItemsLabelConfiguration galleryTypeButton:(TextButtonConfiguration * _Nonnull)galleryTypeButton galleryTypeUnderlineColor:(UIColor * _Nonnull)galleryTypeUnderlineColor isVideoEnabled:(BOOL)isVideoEnabled isPhotoEnabled:(BOOL)isPhotoEnabled OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC20BanubaVideoEditorSDK17CoordinatesParams")
@interface CoordinatesParams : NSObject
@property (nonatomic, readonly) CGAffineTransform transform;
@property (nonatomic, readonly) CGRect frame;
- (nonnull instancetype)initWithTransform:(CGAffineTransform)transform frame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK13CountdownView")
@interface CountdownView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)drawRect:(CGRect)rect;
@end


@interface CountdownView (SWIFT_EXTENSION(BanubaVideoEditorSDK)) <MusicEditorCountdownAnimatableView>
@end


@interface CountdownView (SWIFT_EXTENSION(BanubaVideoEditorSDK))
@property (nonatomic) NSInteger countdownDigit;
- (void)startWithCompletion:(void (^ _Nonnull)(BOOL))completion;
- (void)stop;
@end


/// The Editor screen configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK19EditorConfiguration")
@interface EditorConfiguration : NSObject
/// AdditionalEffectsButtonConfiguration array setups all of the camera screen control buttons’ styles
@property (nonatomic, copy) NSArray<AdditionalEffectsButtonConfiguration *> * _Nonnull additionalEffectsButtons;
/// Setups all of the camera screen control buttons’ bottom offset
@property (nonatomic) CGFloat additionalEffectsButtonsBottomOffset;
/// VideoResolutionConfiguration setups editor options for rendering video
@property (nonatomic, strong) VideoResolutionConfiguration * _Nonnull videoResolution;
/// SaveButtonConfiguration setups save button style
@property (nonatomic, strong) BanubaButtonConfiguration * _Nonnull saveButton;
/// BackButtonConfiguration setups back button style
@property (nonatomic, strong) BackButtonConfiguration * _Nonnull backButton;
/// Indicates whether there will be a preview selection screen after the editor screen
@property (nonatomic) BOOL isVideoCoverSelectionEnabled;
/// How the buttons appears on the screen
@property (nonatomic) BOOL useHorizontalVersion;
- (nonnull instancetype)initWithAdditionalEffectsButtons:(NSArray<AdditionalEffectsButtonConfiguration *> * _Nonnull)additionalEffectsButtons additionalEffectsButtonsBottomOffset:(CGFloat)additionalEffectsButtonsBottomOffset videoResolution:(VideoResolutionConfiguration * _Nonnull)videoResolution saveButton:(BanubaButtonConfiguration * _Nonnull)saveButton backButton:(BackButtonConfiguration * _Nonnull)backButton isVideoCoverSelectionEnabled:(BOOL)isVideoCoverSelectionEnabled useHorizontalVersion:(BOOL)useHorizontalVersion isShortAlertMessageEnabled:(BOOL)isShortAlertMessageEnabled isScannerModeEnabled:(BOOL)isScannerModeEnabled isARCameraEnabled:(BOOL)isARCameraEnabled OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC20BanubaVideoEditorSDK25EditorEffectsConfigHolder")
@interface EditorEffectsConfigHolder : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol ProgressAnimatableViewFactory;

/// The effect item configuration.
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK23EffectItemConfiguration")
@interface EffectItemConfiguration : NSObject
/// The title style configuration.
@property (nonatomic, strong) TextConfiguration * _Nonnull titleStyle;
/// The selection color.
@property (nonatomic, strong) UIColor * _Nonnull selectionColor;
/// The corner radius.
@property (nonatomic) CGFloat cornerRadius;
/// The border width.
@property (nonatomic) CGFloat borderWidth;
/// Should select effect view when effect highlighted.
@property (nonatomic) BOOL selectWhenHighlight;
/// The effect background color.
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
/// The image edge insets.
@property (nonatomic) UIEdgeInsets imageInsets;
/// The image corner radius.
@property (nonatomic) CGFloat imageCornerRadius;
/// The image placeholder image
@property (nonatomic, strong) ImageConfiguration * _Nullable imagePlaceholder;
/// The title should be always visible.
@property (nonatomic) BOOL alwaysShowTitle;
/// Show masks title.
@property (nonatomic) BOOL showMasksTitle;
/// Download icon
@property (nonatomic, strong) ImageConfiguration * _Nullable downloadIcon;
/// The progress view factory
/// Default is CircularProgressViewFactory.
@property (nonatomic, strong) id <ProgressAnimatableViewFactory> _Nullable progressViewFactory;
/// Initializes and returns the effect item configuration object with specified configurations.
- (nonnull instancetype)initWithTitleStyle:(TextConfiguration * _Nonnull)titleStyle selectionColor:(UIColor * _Nonnull)selectionColor cornerRadius:(CGFloat)cornerRadius borderWidth:(CGFloat)borderWidth selectWhenHighlight:(BOOL)selectWhenHighlight backgroundColor:(UIColor * _Nonnull)backgroundColor imageInsets:(UIEdgeInsets)imageInsets imageCornerRadius:(CGFloat)imageCornerRadius imagePlaceholder:(ImageConfiguration * _Nullable)imagePlaceholder alwaysShowTitle:(BOOL)alwaysShowTitle showMasksTitle:(BOOL)showMasksTitle downloadIcon:(ImageConfiguration * _Nullable)downloadIcon progressViewFactory:(id <ProgressAnimatableViewFactory> _Nullable)progressViewFactory OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class TimeMetadata;

SWIFT_CLASS("_TtC20BanubaVideoEditorSDK21EffectOnVideoMetadata")
@interface EffectOnVideoMetadata : NSObject
@property (nonatomic, readonly, strong) TimeMetadata * _Nonnull startTime;
@property (nonatomic, readonly, strong) TimeMetadata * _Nonnull endTime;
@property (nonatomic, readonly) NSUInteger effectId;
- (nonnull instancetype)initWithStartTime:(TimeMetadata * _Nonnull)startTime endTime:(TimeMetadata * _Nonnull)endTime effectId:(NSUInteger)effectId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// Export Video Configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK24ExportVideoConfiguration")
@interface ExportVideoConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Default exposure animation view
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK21ExposureAnimationView")
@interface ExposureAnimationView : UIView
- (void)drawRect:(CGRect)rect;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK20FeatureConfiguration")
@interface FeatureConfiguration : NSObject
@property (nonatomic) BOOL isAudioBrowserEnabled;
@property (nonatomic) BOOL isMusicEditorEnabled;
@property (nonatomic) BOOL isOverlayEditorEnabled;
@property (nonatomic) BOOL isDoubleTapForToggleCameraEnabled;
@property (nonatomic) BOOL isMuteCameraAudioEnabled;
@property (nonatomic) BOOL isInteractivesEnabled;
@property (nonatomic) BOOL isSimpleVideoCoverEnabled;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=default) FeatureConfiguration * _Nonnull default_;)
+ (FeatureConfiguration * _Nonnull)default SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIsMusicEditorEnabled:(BOOL)isMusicEditorEnabled isOverlayEditorEnabled:(BOOL)isOverlayEditorEnabled isDoubleTapForToggleCameraEnabled:(BOOL)isDoubleTapForToggleCameraEnabled isMuteCameraAudioEnabled:(BOOL)isMuteCameraAudioEnabled isInteractivesEnabled:(BOOL)isInteractivesEnabled isAudioBrowserEnabled:(BOOL)isAudioBrowserEnabled isSimpleVideoCoverEnabled:(BOOL)isSimpleVideoCoverEnabled OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class FilterControlButtonConfig;
@class RoundedButtonConfiguration;
@class ScreenNameConfiguration;

/// The Filter configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK19FilterConfiguration")
@interface FilterConfiguration : NSObject
/// Array of control buttons
@property (nonatomic, copy) NSArray<FilterControlButtonConfig *> * _Nonnull controlButtons;
/// RoundedButtonConfiguration setups reset button style
@property (nonatomic, strong) RoundedButtonConfiguration * _Nonnull resetButton;
/// Tool tip label style
@property (nonatomic, strong) TextConfiguration * _Nonnull toolTipLabel;
/// ImageButtonConfiguration setups cursorButton style
@property (nonatomic, strong) ImageButtonConfiguration * _Nonnull cursorButton;
/// BackgroundConfiguration setups background view style
@property (nonatomic, strong) BackgroundConfiguration * _Nonnull backgroundConfiguration;
/// Time line container corner radius
@property (nonatomic) CGFloat timelineCornerRadius;
/// EffectItemConfiguration setups collection view effect item cell
@property (nonatomic, strong) EffectItemConfiguration * _Nonnull effectItemConfiguration;
/// Time line container height
@property (nonatomic) CGFloat timelineHeight;
/// Time line container left offset
@property (nonatomic) CGFloat timelineLeftOffset;
/// Time line container right offset
@property (nonatomic) CGFloat timelineRightOffset;
/// Filters container height
@property (nonatomic) CGFloat filtersHeight;
/// ScreenNameConfiguration setups screen title style
@property (nonatomic, strong) ScreenNameConfiguration * _Nonnull screenNameConfiguration;
- (nonnull instancetype)initWithControlButtons:(NSArray<FilterControlButtonConfig *> * _Nonnull)controlButtons resetButton:(RoundedButtonConfiguration * _Nonnull)resetButton toolTipLabel:(TextConfiguration * _Nonnull)toolTipLabel cursorButton:(ImageButtonConfiguration * _Nonnull)cursorButton backgroundConfiguration:(BackgroundConfiguration * _Nonnull)backgroundConfiguration timelineCornerRadius:(CGFloat)timelineCornerRadius effectItemConfiguration:(EffectItemConfiguration * _Nonnull)effectItemConfiguration timelineHeight:(CGFloat)timelineHeight timelineLeftOffset:(CGFloat)timelineLeftOffset timelineRightOffset:(CGFloat)timelineRightOffset filtersHeight:(CGFloat)filtersHeight screenNameConfiguration:(ScreenNameConfiguration * _Nonnull)screenNameConfiguration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


enum Type : NSInteger;

/// The Filter control button configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK25FilterControlButtonConfig")
@interface FilterControlButtonConfig : NSObject
/// Filter type of the button
@property (nonatomic, readonly) enum Type type;
/// ImageName setups normal UIImage for additional button’s UIImageView
@property (nonatomic, readonly, copy) NSString * _Nonnull imageName;
/// ImageName setups  selected UIImage for additional button’s UIImageView
@property (nonatomic, readonly, copy) NSString * _Nullable selectedImageName;
/// Additional init
/// \param type Filter type of the button
///
/// \param imageName ImageName setups normal UIImage for additional button’s UIImageView
///
/// \param selectedImageName ImageName setups selected UIImage for additional button’s UIImageView
///
- (nonnull instancetype)initWithType:(enum Type)type imageName:(NSString * _Nonnull)imageName selectedImageName:(NSString * _Nullable)selectedImageName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Filter control button types
typedef SWIFT_ENUM(NSInteger, Type, open) {
  TypeCancel = 0,
  TypePlay = 1,
  TypeDone = 2,
};

@class SmallActivityIndicatorConfiguration;

/// The Full screen activity indicator configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK31FullScreenActivityConfiguration")
@interface FullScreenActivityConfiguration : NSObject
/// Label title font
@property (nonatomic, strong) UIFont * _Nonnull labelFont;
/// Container corner radius
@property (nonatomic) CGFloat cornerRadius;
/// Background view alpha
@property (nonatomic) CGFloat activityEffectsViewAlpha;
/// Throbber
@property (nonatomic, strong) SmallActivityIndicatorConfiguration * _Nonnull activityIndicator;
- (nonnull instancetype)initWithLabelFont:(UIFont * _Nonnull)labelFont cornerRadius:(CGFloat)cornerRadius activityEffectsViewAlpha:(CGFloat)activityEffectsViewAlpha activityIndicator:(SmallActivityIndicatorConfiguration * _Nonnull)activityIndicator OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC20BanubaVideoEditorSDK22FullscreenActivityView")
@interface FullscreenActivityView : UIView
- (void)awakeFromNib;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK18GIFOnVideoMetadata")
@interface GIFOnVideoMetadata : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSData * _Nullable imageData;
@property (nonatomic, readonly, strong) TimeMetadata * _Nonnull startTime;
@property (nonatomic, readonly, strong) TimeMetadata * _Nonnull endTime;
@property (nonatomic, readonly, strong) CoordinatesParams * _Nonnull coordinatesParams;
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id imageData:(NSData * _Nullable)imageData startTime:(TimeMetadata * _Nonnull)startTime endTime:(TimeMetadata * _Nonnull)endTime coordinatesParams:(CoordinatesParams * _Nonnull)coordinatesParams OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK34GIFPickerDataLoadingViewController")
@interface GIFPickerDataLoadingViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// The  Gallery configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK20GalleryConfiguration")
@interface GalleryConfiguration : NSObject
/// BackButtonConfiguration setups back button style
@property (nonatomic, strong) BackButtonConfiguration * _Nonnull backButtonConfiguration;
/// TextConfiguration setups title style
@property (nonatomic, strong) TextConfiguration * _Nonnull titleConfiguration;
/// TextConfiguration setups ‘no video’ title style
@property (nonatomic, strong) TextConfiguration * _Nonnull noVideoFoundTitleConfiguration;
/// TextConfiguration setups ‘no video’ subtitle style
@property (nonatomic, strong) TextConfiguration * _Nonnull noVideoFoundSubtitleConfiguration;
/// ImageButtonConfiguration setups multiselect button style
@property (nonatomic, strong) ImageButtonConfiguration * _Nonnull multiselectButtonConfiguration;
/// ImageButtonConfiguration setups
@property (nonatomic, strong) ImageButtonConfiguration * _Nonnull cancelMultiselectButtonConfiguration;
/// SaveButtonConfiguration setups done button style
@property (nonatomic, strong) SaveButtonConfiguration * _Nonnull chooseSelectionButtonConfiguration;
/// GalleryItemConfiguration setups gallery item style for collection view cell
@property (nonatomic, strong) GalleryItemConfiguration * _Nonnull galleryItemConfiguration;
/// GalleryLayoutConfiguration setups collection view layout for gallery items
@property (nonatomic, strong) GalleryLayoutConfiguration * _Nonnull layoutConfiguration;
- (nonnull instancetype)initWithBackButtonConfiguration:(BackButtonConfiguration * _Nonnull)backButtonConfiguration titleConfiguration:(TextConfiguration * _Nonnull)titleConfiguration noVideoFoundTitleConfiguration:(TextConfiguration * _Nonnull)noVideoFoundTitleConfiguration noVideoFoundSubtitleConfiguration:(TextConfiguration * _Nonnull)noVideoFoundSubtitleConfiguration multiselectButtonConfiguration:(ImageButtonConfiguration * _Nonnull)multiselectButtonConfiguration cancelMultiselectButtonConfiguration:(ImageButtonConfiguration * _Nonnull)cancelMultiselectButtonConfiguration chooseSelectionButtonConfiguration:(SaveButtonConfiguration * _Nonnull)chooseSelectionButtonConfiguration galleryItemConfiguration:(GalleryItemConfiguration * _Nonnull)galleryItemConfiguration layoutConfiguration:(GalleryLayoutConfiguration * _Nonnull)layoutConfiguration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// The Gallery item configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK24GalleryItemConfiguration")
@interface GalleryItemConfiguration : NSObject
/// Order number background color
@property (nonatomic, strong) UIColor * _Nonnull orderNumberBackgroudColor;
/// Order number title color
@property (nonatomic, strong) UIColor * _Nonnull orderNumberTitleColor;
/// Image name setups  image for selection indicator
@property (nonatomic, copy) NSString * _Nonnull backgroundSelectionIndicatorImageName;
/// Is selection indicator is hidden
@property (nonatomic) BOOL hideSelectionIndicatorBySelection;
/// TextConfiguration setups duration label configuration
@property (nonatomic, strong) TextConfiguration * _Nonnull durationLabelConfiguration;
/// Duration label background color
@property (nonatomic, strong) UIColor * _Nonnull durationLabelBackgroundColor;
/// SmallActivityIndicatorConfiguration setups activitty indicator style
@property (nonatomic, strong) SmallActivityIndicatorConfiguration * _Nonnull activityIndicatorConfiguration;
/// Container’s corner radius
@property (nonatomic) CGFloat cornerRadius;
- (nonnull instancetype)initWithOrderNumberBackgroudColor:(UIColor * _Nonnull)orderNumberBackgroudColor orderNumberTitleColor:(UIColor * _Nonnull)orderNumberTitleColor backgroundSelectionIndicatorImageName:(NSString * _Nonnull)backgroundSelectionIndicatorImageName hideSelectionIndicatorBySelection:(BOOL)hideSelectionIndicatorBySelection durationLabelConfiguration:(TextConfiguration * _Nonnull)durationLabelConfiguration durationLabelBackgroundColor:(UIColor * _Nonnull)durationLabelBackgroundColor activityIndicatorConfiguration:(SmallActivityIndicatorConfiguration * _Nonnull)activityIndicatorConfiguration cornerRadius:(CGFloat)cornerRadius OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// The Gallery layout configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK26GalleryLayoutConfiguration")
@interface GalleryLayoutConfiguration : NSObject
/// Number of items per row
@property (nonatomic) NSInteger numberOfItemsPerRow;
/// Spacing between items
@property (nonatomic) CGFloat interitemSpacing;
/// Edge insets
@property (nonatomic) UIEdgeInsets edgeInsets;
- (nonnull instancetype)initWithNumberOfItemsPerRow:(NSInteger)numberOfItemsPerRow interitemSpacing:(CGFloat)interitemSpacing edgeInsets:(UIEdgeInsets)edgeInsets OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class GalleryVideoPartConfiguration;

/// The video parts configuration.
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK30GalleryVideoPartsConfiguration")
@interface GalleryVideoPartsConfiguration : NSObject
/// Add a new video part image button name.
@property (nonatomic, copy) NSString * _Nonnull addGalleryVideoPartImageName;
/// The video part item configuration.
@property (nonatomic, strong) GalleryVideoPartConfiguration * _Nonnull videoPartConfiguration;
/// Initializes and returns the video parts configuration object with specified configurations.
- (nonnull instancetype)initWithAddGalleryVideoPartImageName:(NSString * _Nonnull)addGalleryVideoPartImageName videoPartConfiguration:(GalleryVideoPartConfiguration * _Nonnull)videoPartConfiguration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The video part item configuration.
SWIFT_CLASS("_TtCC20BanubaVideoEditorSDK30GalleryVideoPartsConfiguration29GalleryVideoPartConfiguration")
@interface GalleryVideoPartConfiguration : NSObject
/// The selection color.
@property (nonatomic, strong) UIColor * _Nonnull selectionColor;
/// The duration label style configuration.
@property (nonatomic, strong) TextConfiguration * _Nonnull durationLabelConfiguration;
/// The corner radius value.
@property (nonatomic) CGFloat cornerRadius;
/// The video part image corner radius.
@property (nonatomic) CGFloat imageCornerRadius;
/// The image edge insets.
@property (nonatomic) UIEdgeInsets imageInsets;
/// Initializes and returns the video part item configuration object with specified configurations.
- (nonnull instancetype)initWithSelectionColor:(UIColor * _Nonnull)selectionColor durationLabelConfiguration:(TextConfiguration * _Nonnull)durationLabelConfiguration cornerRadius:(CGFloat)cornerRadius imageCornerRadius:(CGFloat)imageCornerRadius imageInsets:(UIEdgeInsets)imageInsets OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The Gif picker configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK22GifPickerConfiguration")
@interface GifPickerConfiguration : NSObject
/// Regular font for controls
@property (nonatomic, strong) UIFont * _Nonnull regularFont;
/// Bold font for controls
@property (nonatomic, strong) UIFont * _Nonnull boldFont;
/// SmallActivityIndicatorConfiguration setups activity indicator style
@property (nonatomic, strong) SmallActivityIndicatorConfiguration * _Nonnull activityConfiguration;
/// Cursor color
@property (nonatomic, strong) UIColor * _Nonnull cursorColor;
/// API key to interact with giphy service
@property (nonatomic, copy) NSString * _Nullable giphyAPIKey;
- (nonnull instancetype)initWithRegularFont:(UIFont * _Nonnull)regularFont boldFont:(UIFont * _Nonnull)boldFont activityConfiguration:(SmallActivityIndicatorConfiguration * _Nonnull)activityConfiguration cursorColor:(UIColor * _Nonnull)cursorColor giphyAPIKey:(NSString * _Nullable)giphyAPIKey OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC20BanubaVideoEditorSDK8GiphyAPI")
@interface GiphyAPI : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




@class TimerOptionBarConfiguration;

/// The timer selection screen configuration.
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK22HandsfreeConfiguration")
@interface HandsfreeConfiguration : NSObject
@property (nonatomic, strong) TimerOptionBarConfiguration * _Nonnull timerOptionBarConfiguration;
- (nonnull instancetype)initWithTimerOptionBarConfiguration:(TimerOptionBarConfiguration * _Nonnull)timerOptionBarConfiguration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtCC20BanubaVideoEditorSDK22HandsfreeConfiguration27TimerOptionBarConfiguration")
@interface TimerOptionBarConfiguration : NSObject
/// Showing the title for the timer
/// Default “Off”
@property (nonatomic, copy) NSString * _Nonnull disableOptionTitle;
/// The selector view color.
@property (nonatomic, strong) UIColor * _Nonnull selectorColor;
/// The selector view text color.
@property (nonatomic, strong) UIColor * _Nonnull selectorTextColor;
/// The timer option selection view background color.
@property (nonatomic, strong) UIColor * _Nonnull optionBackgroundColor;
/// The timer option selection view corner radius.
@property (nonatomic) CGFloat optionCornerRadius;
/// The view text color.
@property (nonatomic, strong) UIColor * _Nonnull optionTextColor;
/// The timer option view background color.
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
/// The HandsFreeViewController corner radius.
@property (nonatomic) CGFloat cornerRadius;
/// The slider corner radius.
@property (nonatomic) CGFloat sliderCornerRadius;
/// The bar corner radius.
@property (nonatomic) CGFloat barCornerRadius;
/// The selector views edge insets.
@property (nonatomic) UIEdgeInsets selectorEdgeInsets;
/// The color of the activated switch of active lines in slider.
@property (nonatomic, strong) UIColor * _Nonnull activeThumbAndLineColor;
/// The color of the inactivated switch of inactive lines in slider.
@property (nonatomic, strong) UIColor * _Nonnull inactiveThumbAndLineColor;
/// The minimum value for video duration.
/// Default 1.0
@property (nonatomic) double minVideoDuration;
- (nonnull instancetype)initWithDisableOptionTitle:(NSString * _Nonnull)disableOptionTitle selectorColor:(UIColor * _Nonnull)selectorColor selectorTextColor:(UIColor * _Nonnull)selectorTextColor optionBackgroundColor:(UIColor * _Nonnull)optionBackgroundColor optionCornerRadius:(CGFloat)optionCornerRadius optionTextColor:(UIColor * _Nonnull)optionTextColor backgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius sliderCornerRadius:(CGFloat)sliderCornerRadius barCornerRadius:(CGFloat)barCornerRadius selectorEdgeInsets:(UIEdgeInsets)selectorEdgeInsets activeThumbAndLineColor:(UIColor * _Nonnull)activeThumbAndLineColor inactiveThumbAndLineColor:(UIColor * _Nonnull)inactiveThumbAndLineColor minVideoDuration:(double)minVideoDuration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// The button with image configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK24ImageButtonConfiguration")
@interface ImageButtonConfiguration : NSObject
/// The default image configuration
@property (nonatomic, strong) ImageConfiguration * _Nonnull imageConfiguration;
/// The selected image configuration
@property (nonatomic, strong) ImageConfiguration * _Nullable selectedImageConfiguration;
/// Initializes and returns the button with image configuration object with speicified states configurations.
- (nonnull instancetype)initWithImageConfiguration:(ImageConfiguration * _Nonnull)imageConfiguration selectedImageConfiguration:(ImageConfiguration * _Nullable)selectedImageConfiguration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The image configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK18ImageConfiguration")
@interface ImageConfiguration : NSObject
/// The name of the image
/// This string will be used for creating the image
@property (nonatomic, copy) NSString * _Nonnull imageName;
/// The image stored or instance by name
@property (nonatomic, readonly, strong) UIImage * _Nullable image;
/// Initializes and returns the image configuration object with speicified image name reference.
- (nonnull instancetype)initWithImageName:(NSString * _Nonnull)imageName OBJC_DESIGNATED_INITIALIZER;
/// Initializes and returns the image configuration object with speicified image.
- (nonnull instancetype)initWithImage:(UIImage * _Nonnull)image OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK16ImageCropperView")
@interface ImageCropperView : UIView
- (void)awakeFromNib;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC20BanubaVideoEditorSDK27InteractiveInterestMetadata")
@interface InteractiveInterestMetadata : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK23InteractivePollMetadata")
@interface InteractivePollMetadata : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK27InteractiveQuestionMetadata")
@interface InteractiveQuestionMetadata : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK28InteractiveTestFieldMetaData")
@interface InteractiveTestFieldMetaData : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK23InteractiveTestMetadata")
@interface InteractiveTestMetadata : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class TimeLineConfiguration;
@class TrimTimeLineConfiguration;
@class PlayerControlConfiguration;
@class TimeLabelConfiguration;

/// The Multi trim configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK22MultiTrimConfiguration")
@interface MultiTrimConfiguration : NSObject
/// SaveButtonConfiguration setups save button style
@property (nonatomic, strong) SaveButtonConfiguration * _Nonnull saveButton;
/// BackButtonConfiguration setups save button style
@property (nonatomic, strong) BackButtonConfiguration * _Nonnull backButton;
/// ImageButtonConfiguration setups rotate button style
@property (nonatomic, strong) ImageButtonConfiguration * _Nullable rotateButton;
/// TimeLineConfiguration setups multi time line bar style and options
@property (nonatomic, strong) TimeLineConfiguration * _Nonnull timeLimeConfiguration;
/// TrimTimeLineConfiguration setups single time line bar style and options
@property (nonatomic, strong) TrimTimeLineConfiguration * _Nonnull trimTimeLineConfiguration;
/// Time line height
@property (nonatomic) CGFloat trimTimeLineHeight;
/// PlayerControlConfiguration setups play/pause button style
@property (nonatomic, strong) PlayerControlConfiguration * _Nonnull playerControlConfiguration;
/// BackgroundConfiguration setups background view style
@property (nonatomic, strong) BackgroundConfiguration * _Nonnull backgroundConfiguration;
/// BackgroundConfiguration setups bottom background view style
@property (nonatomic, strong) BackgroundConfiguration * _Nonnull bottomViewBackgroundConfiguration;
/// ScreenNameConfiguration setups screen title style
@property (nonatomic, strong) ScreenNameConfiguration * _Nonnull screenNameConfiguration;
/// Trim sequence edge insets
@property (nonatomic) UIEdgeInsets trimSequenceEdgeInsets;
/// Trim sequence height
@property (nonatomic) CGFloat trimSequenceHeight;
/// TimeLabelConfiguration setups current duration view style
@property (nonatomic, strong) TimeLabelConfiguration * _Nonnull editedTimeLabelConfiguration;
- (nonnull instancetype)initWithSaveButton:(SaveButtonConfiguration * _Nonnull)saveButton backButton:(BackButtonConfiguration * _Nonnull)backButton rotateButton:(ImageButtonConfiguration * _Nullable)rotateButton timeLimeConfiguration:(TimeLineConfiguration * _Nonnull)timeLimeConfiguration trimTimeLineConfiguration:(TrimTimeLineConfiguration * _Nonnull)trimTimeLineConfiguration trimTimeLineHeight:(CGFloat)trimTimeLineHeight playerControlConfiguration:(PlayerControlConfiguration * _Nonnull)playerControlConfiguration backgroundConfiguration:(BackgroundConfiguration * _Nonnull)backgroundConfiguration bottomViewBackgroundConfiguration:(BackgroundConfiguration * _Nonnull)bottomViewBackgroundConfiguration screenNameConfiguration:(ScreenNameConfiguration * _Nonnull)screenNameConfiguration trimSequenceEdgeInsets:(UIEdgeInsets)trimSequenceEdgeInsets trimSequenceHeight:(CGFloat)trimSequenceHeight editedTimeLabelConfiguration:(TimeLabelConfiguration * _Nonnull)editedTimeLabelConfiguration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class MusicEditorTrack;

SWIFT_CLASS("_TtC20BanubaVideoEditorSDK19MusicEditorMetadata")
@interface MusicEditorMetadata : NSObject
@property (nonatomic, copy) NSArray<MusicEditorTrack *> * _Nonnull tracks;
- (nonnull instancetype)initWithTracks:(NSArray<MusicEditorTrack *> * _Nonnull)tracks OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK16MusicEditorTrack")
@interface MusicEditorTrack : NSObject
@property (nonatomic, copy) NSURL * _Nonnull url;
@property (nonatomic, copy) NSURL * _Nonnull originalURL;
@property (nonatomic, copy) NSString * _Nonnull title;
@property (nonatomic) int64_t id;
- (nonnull instancetype)initWithPosition:(NSInteger)position timeScale:(NSTimeInterval)timeScale compositionStart:(NSTimeInterval)compositionStart timeRangeStart:(NSTimeInterval)timeRangeStart timeRangeEnd:(NSTimeInterval)timeRangeEnd url:(NSURL * _Nonnull)url originalURL:(NSURL * _Nonnull)originalURL isAudioRecord:(BOOL)isAudioRecord applyedFilterId:(NSInteger)applyedFilterId title:(NSString * _Nonnull)title id:(int64_t)id OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@protocol VideoEditorCaptureButtonDelegate;
@class RecordButtonConfiguration;

SWIFT_CLASS("_TtC20BanubaVideoEditorSDK37PhotoVideoCaptureButtonViewController")
@interface PhotoVideoCaptureButtonViewController : UIViewController
@property (nonatomic, weak) id <VideoEditorCaptureButtonDelegate> _Nullable delegate;
@property (nonatomic, strong) RecordButtonConfiguration * _Nullable configuration;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP20BanubaVideoEditorSDK24VideoEditorCaptureButton_")
@protocol VideoEditorCaptureButton
@property (nonatomic, strong) id <VideoEditorCaptureButtonDelegate> _Nullable delegate;
@property (nonatomic, strong) RecordButtonConfiguration * _Nullable configuration;
- (void)updateVideoRecordingProgress:(double)captureProgress;
- (void)changeViewToIdleState;
- (void)changeViewToCaptureState;
@end


@interface PhotoVideoCaptureButtonViewController (SWIFT_EXTENSION(BanubaVideoEditorSDK)) <VideoEditorCaptureButton>
- (void)updateVideoRecordingProgress:(double)captureProgress;
- (void)changeViewToIdleState;
- (void)changeViewToCaptureState;
@end




/// The player control configuration.
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK26PlayerControlConfiguration")
@interface PlayerControlConfiguration : NSObject
/// The play button image name.
@property (nonatomic, copy) NSString * _Nonnull playButtonImageName;
/// The pause button image name.
@property (nonatomic, copy) NSString * _Nonnull pauseButtonImageName;
/// Initializes and returns the player control configuration object with specified configurations.
- (nonnull instancetype)initWithPlayButtonImageName:(NSString * _Nonnull)playButtonImageName pauseButtonImageName:(NSString * _Nonnull)pauseButtonImageName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC20BanubaVideoEditorSDK32PreviewSingleVideoViewController")
@interface PreviewSingleVideoViewController : UIViewController
- (void)viewDidLayoutSubviews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end





SWIFT_CLASS("_TtC20BanubaVideoEditorSDK16PreviewVideoView")
@interface PreviewVideoView : UIImageView
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP20BanubaVideoEditorSDK22ProgressAnimatableView_")
@protocol ProgressAnimatableView
@property (nonatomic) float progress;
@end


/// Progress animatable view factory.
/// Default is CircularProgressViewFactory.
SWIFT_PROTOCOL("_TtP20BanubaVideoEditorSDK29ProgressAnimatableViewFactory_")
@protocol ProgressAnimatableViewFactory
- (id <ProgressAnimatableView> _Nonnull)makeProgressAnimatableView SWIFT_WARN_UNUSED_RESULT;
@end

@class NSArray;

/// The Capture button configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK25RecordButtonConfiguration")
@interface RecordButtonConfiguration : NSObject
/// Color setups capture button round color for idle state
@property (nonatomic) CGColorRef _Nonnull idleStrokeColor;
/// Color setups capture button round color for capture state
@property (nonatomic) CGColorRef _Nonnull strokeColor;
/// Colors setups capture button gradient filling colors
@property (nonatomic, strong) NSArray * _Nonnull gradientColors;
/// Round line width for idle state
@property (nonatomic) CGFloat circularTimeLineIdleWidth;
/// Round line width for capture state
@property (nonatomic) CGFloat circularTimeLineCaptureWidth;
/// Image name setups core image for idle state
@property (nonatomic, copy) NSString * _Nonnull normalImageName;
/// Image name setups core image for capture state
@property (nonatomic, copy) NSString * _Nonnull recordImageName;
/// Capture button width
@property (nonatomic) CGFloat width;
/// Capture button height
@property (nonatomic) CGFloat height;
/// Button resize scale for capture state
@property (nonatomic) CGFloat recordingScale;
- (nonnull instancetype)initWithIdleStrokeColor:(CGColorRef _Nonnull)idleStrokeColor strokeColor:(CGColorRef _Nonnull)strokeColor gradientColors:(NSArray * _Nonnull)gradientColors circularTimeLineIdleWidth:(CGFloat)circularTimeLineIdleWidth circularTimeLineCaptureWidth:(CGFloat)circularTimeLineCaptureWidth normalImageName:(NSString * _Nonnull)normalImageName recordImageName:(NSString * _Nonnull)recordImageName width:(CGFloat)width height:(CGFloat)height recordingScale:(CGFloat)recordingScale OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol VideoEditorCaptureButtonProvider;
@class SpeedButtonConfiguration;
@class TimerConfiguration;
@class RecorderEffectsConfiguration;

/// The Camera screen configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK21RecorderConfiguration")
@interface RecorderConfiguration : NSObject
/// VideoResolutionConfiguration setups camera options for capturing and rendering video
@property (nonatomic, strong) VideoResolutionConfiguration * _Nonnull videoResolution;
/// SaveButtonConfiguration setups save button style
@property (nonatomic, strong) SaveButtonConfiguration * _Nullable saveButton;
/// BackButtonConfiguration setups back button style
@property (nonatomic, strong) BackButtonConfiguration * _Nonnull backButton;
/// ImageName setups remove button UIImage
@property (nonatomic, copy) NSString * _Nonnull removeButtonImageName;
/// Setups top progress label style. Only for horizontal recorder.
@property (nonatomic, strong) TextConfiguration * _Nullable progressLabelConfiguration;
/// Setups top floating line view style. Only for horizontal recorder.
@property (nonatomic, strong) TextConfiguration * _Nullable floatingLineViewConfiguration;
/// CaptureButtonMode setups camera capturing functionality
@property (nonatomic) enum CaptureButtonMode captureButtonMode;
/// RecordButtonConfiguration setups capture button style
@property (nonatomic, strong) RecordButtonConfiguration * _Nonnull recordButtonConfiguration;
/// VideoEditorCaptureButtonProvider provides access to the possibility for creating capture button
@property (nonatomic, strong) id <VideoEditorCaptureButtonProvider> _Nullable recordButtonProvider;
/// AdditionalEffectsButtonConfiguration array setups all of the camera screen control buttons’ styles
@property (nonatomic, copy) NSArray<AdditionalEffectsButtonConfiguration *> * _Nonnull additionalEffectsButtons;
/// SpeedButtonConfiguration setups speed button style
@property (nonatomic, strong) SpeedButtonConfiguration * _Nonnull speedButton;
/// RoundedButtonConfiguration setups gallery button style
@property (nonatomic, strong) RoundedButtonConfiguration * _Nonnull galleryButton;
/// Image name setups gallery button image for empty gallery state
@property (nonatomic, copy) NSString * _Nonnull emptyGalleryImageName;
/// TimerConfiguration setups timer functionality options
@property (nonatomic, strong) TimerConfiguration * _Nonnull timerConfiguration;
/// TimeLineConfiguration setups progress bar style for sequences
@property (nonatomic, strong) TimeLineConfiguration * _Nonnull timeLineConfiguration;
/// Value setups capture button posttion according to the screen bottom
@property (nonatomic) CGFloat regularRecordButtonPosition;
/// RecorderEffectsConfiguration setups effects list style
@property (nonatomic, strong) RecorderEffectsConfiguration * _Nonnull recorderEffectsConfiguration;
/// Value setups left controls positions according to the capture button bottom
@property (nonatomic) CGFloat leftControlsBottomOffsetFromCaptureButton;
/// Value setups left controls positions according to the capture button leading
@property (nonatomic) CGFloat leftControlsLeftOffset;
/// Sequence bar height
@property (nonatomic) CGFloat sequenceHeight;
/// How the buttons appears on the screen
@property (nonatomic) BOOL useHorizontalVersion;
/// Loop audio while recording video if music is selected
@property (nonatomic) BOOL loopAudioWhileRecording;
/// This flag suggests that given audio duration setups maximum recording length
@property (nonatomic) BOOL takeAudioDurationAsMaximum;
/// Value provides the ability to dynamically changing the title of the song when new audio is adding
@property (nonatomic) BOOL isDynamicMusicTitle;
/// Value provides the ability to open front camera by default
@property (nonatomic) BOOL isDefaultFrontCamera;
/// Value setups music title floating view is enabled state
@property (nonatomic) BOOL isMusicTitleFloatingLineEnabled;
- (nonnull instancetype)initWithVideoResolution:(VideoResolutionConfiguration * _Nonnull)videoResolution saveButton:(SaveButtonConfiguration * _Nullable)saveButton backButton:(BackButtonConfiguration * _Nonnull)backButton removeButtonImageName:(NSString * _Nonnull)removeButtonImageName progressLabelConfiguration:(TextConfiguration * _Nullable)progressLabelConfiguration floatingLineViewConfiguration:(TextConfiguration * _Nullable)floatingLineViewConfiguration captureButtonMode:(enum CaptureButtonMode)captureButtonMode recordButtonConfiguration:(RecordButtonConfiguration * _Nonnull)recordButtonConfiguration recordButtonProvider:(id <VideoEditorCaptureButtonProvider> _Nullable)recordButtonProvider additionalEffectsButtons:(NSArray<AdditionalEffectsButtonConfiguration *> * _Nonnull)additionalEffectsButtons speedButton:(SpeedButtonConfiguration * _Nonnull)speedButton galleryButton:(RoundedButtonConfiguration * _Nonnull)galleryButton emptyGalleryImageName:(NSString * _Nonnull)emptyGalleryImageName timerConfiguration:(TimerConfiguration * _Nonnull)timerConfiguration timeLineConfiguration:(TimeLineConfiguration * _Nonnull)timeLineConfiguration regularRecordButtonPosition:(CGFloat)regularRecordButtonPosition recorderEffectsConfiguration:(RecorderEffectsConfiguration * _Nonnull)recorderEffectsConfiguration leftControlsBottomOffsetFromCaptureButton:(CGFloat)leftControlsBottomOffsetFromCaptureButton leftControlsLeftOffset:(CGFloat)leftControlsLeftOffset sequenceHeight:(CGFloat)sequenceHeight useHorizontalVersion:(BOOL)useHorizontalVersion loopAudioWhileRecording:(BOOL)loopAudioWhileRecording takeAudioDurationAsMaximum:(BOOL)takeAudioDurationAsMaximum isDynamicMusicTitle:(BOOL)isDynamicMusicTitle isDefaultFrontCamera:(BOOL)isDefaultFrontCamera isMusicTitleFloatingLineEnabled:(BOOL)isMusicTitleFloatingLineEnabled OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// The recorder effects screen configuration.
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK28RecorderEffectsConfiguration")
@interface RecorderEffectsConfiguration : NSObject
/// The view corner radius.
@property (nonatomic) CGFloat cornerRadius;
/// The view background color.
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
/// The screen name configuraiton.
@property (nonatomic, strong) ScreenNameConfiguration * _Nonnull screenNameConfiguration;
/// The effects height.
@property (nonatomic) CGFloat effectsHeight;
/// The effect item configuration.
@property (nonatomic, strong) EffectItemConfiguration * _Nonnull effectItemConfiguration;
/// Initializes and returns the recorder effects screen configuration object with specified configurations.
- (nonnull instancetype)initWithCornerRadius:(CGFloat)cornerRadius backgroundColor:(UIColor * _Nonnull)backgroundColor screenNameConfiguration:(ScreenNameConfiguration * _Nonnull)screenNameConfiguration effectsHeight:(CGFloat)effectsHeight effectItemConfiguration:(EffectItemConfiguration * _Nonnull)effectItemConfiguration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// The button configuration with rounging settings, text styling and background color configuration.
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK26RoundedButtonConfiguration")
@interface RoundedButtonConfiguration : NSObject
/// The button text configuration.
@property (nonatomic, strong) TextConfiguration * _Nonnull textConfiguration;
/// The border width configuration.
@property (nonatomic) CGFloat borderWidth;
/// The border color configuration.
@property (nonatomic) CGColorRef _Nullable borderColor;
/// The corner radius configuration
@property (nonatomic) CGFloat cornerRadius;
/// The background color configuration.
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
/// Initializes and returns the button configuration object with speicified fields configurations.
- (nonnull instancetype)initWithTextConfiguration:(TextConfiguration * _Nonnull)textConfiguration cornerRadius:(CGFloat)cornerRadius backgroundColor:(UIColor * _Nonnull)backgroundColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK10SDKService")
@interface SDKService : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// The save button configuration with text styling and more.
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK23SaveButtonConfiguration")
@interface SaveButtonConfiguration : NSObject
/// The button text configuration.
@property (nonatomic, strong) TextConfiguration * _Nonnull textConfiguration;
/// The inactive button text configuration.
@property (nonatomic, strong) TextConfiguration * _Nonnull inactiveTextConfiguration;
/// The button text.
@property (nonatomic, copy) NSString * _Nonnull text;
/// The button width.
@property (nonatomic) CGFloat width;
/// The button height.
@property (nonatomic) CGFloat height;
/// The button corner radius.
@property (nonatomic) CGFloat cornerRadius;
/// The button background color.
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
/// The invactive button background color.
@property (nonatomic, strong) UIColor * _Nonnull inactiveBackgroundColor;
/// Initializes and returns the button configuration object with specified configurations.
- (nonnull instancetype)initWithTextConfiguration:(TextConfiguration * _Nonnull)textConfiguration inactiveTextConfiguration:(TextConfiguration * _Nonnull)inactiveTextConfiguration text:(NSString * _Nonnull)text width:(CGFloat)width height:(CGFloat)height cornerRadius:(CGFloat)cornerRadius backgroundColor:(UIColor * _Nonnull)backgroundColor inactiveBackgroundColor:(UIColor * _Nonnull)inactiveBackgroundColor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The screen name label configuration.
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK23ScreenNameConfiguration")
@interface ScreenNameConfiguration : NSObject
/// The screen name should be hidden.
@property (nonatomic) BOOL isHidden;
/// The text configuration of screen name label.
@property (nonatomic, strong) TextConfiguration * _Nullable style;
/// Initializes and returns the screen name label configuration object with specified configurations.
- (nonnull instancetype)initWithIsHidden:(BOOL)isHidden style:(TextConfiguration * _Nullable)style OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// The Video cover selection screen
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK38SimpleVideoCoverSelectionConfiguration")
@interface SimpleVideoCoverSelectionConfiguration : NSObject
/// TextButtonConfiguration setups cancel button style
@property (nonatomic, strong) TextButtonConfiguration * _Nonnull cancelButton;
/// RoundedButtonConfiguration setups done button style
@property (nonatomic, strong) RoundedButtonConfiguration * _Nonnull doneButton;
/// TextConfiguration setups tool tip label
@property (nonatomic, strong) TextConfiguration * _Nonnull toolTipLabel;
/// Slider color
@property (nonatomic, strong) UIColor * _Nonnull sliderColor;
/// Slider min state color
@property (nonatomic, strong) UIColor * _Nonnull sliderMinTrackTintColor;
/// Slider max state color
@property (nonatomic, strong) UIColor * _Nonnull sliderMaxTrackTintColor;
/// BackgroundConfiguration setups background view configuration
@property (nonatomic, strong) BackgroundConfiguration * _Nonnull backgroundConfiguration;
- (nonnull instancetype)initWithCancelButton:(TextButtonConfiguration * _Nonnull)cancelButton doneButton:(RoundedButtonConfiguration * _Nonnull)doneButton toolTipLabel:(TextConfiguration * _Nonnull)toolTipLabel sliderColor:(UIColor * _Nonnull)sliderColor sliderMinTrackTintColor:(UIColor * _Nonnull)sliderMinTrackTintColor sliderMaxTrackTintColor:(UIColor * _Nonnull)sliderMaxTrackTintColor backgroundConfiguration:(BackgroundConfiguration * _Nonnull)backgroundConfiguration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// The single trim configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK23SingleTrimConfiguration")
@interface SingleTrimConfiguration : NSObject
/// SaveButtonConfiguration setups save button style
@property (nonatomic, strong) SaveButtonConfiguration * _Nonnull saveButton;
/// BackButtonConfiguration setups save button style
@property (nonatomic, strong) BackButtonConfiguration * _Nonnull backButton;
/// ImageButtonConfiguration setups rotate button style
@property (nonatomic, strong) ImageButtonConfiguration * _Nullable rotateButton;
/// SmallActivityIndicatorConfiguration setups throbber style
@property (nonatomic, strong) SmallActivityIndicatorConfiguration * _Nonnull throbber;
/// TrimTimeLineConfiguration setups single time line bar style and options
@property (nonatomic, strong) TrimTimeLineConfiguration * _Nonnull trimTimeLineConfiguration;
/// Time line height
@property (nonatomic) CGFloat trimTimeLineHeight;
/// PlayerControlConfiguration setups play/pause button style
@property (nonatomic, strong) PlayerControlConfiguration * _Nonnull playerControlConfiguration;
/// BackgroundConfiguration setups background view style
@property (nonatomic, strong) BackgroundConfiguration * _Nonnull backgroundConfiguration;
/// ScreenNameConfiguration setups screen title style
@property (nonatomic, strong) ScreenNameConfiguration * _Nonnull screenNameConfiguration;
/// TimeLabelConfiguration setups current duration view style
@property (nonatomic, strong) TimeLabelConfiguration * _Nonnull editedTimeLabelConfiguration;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class UIPresentationController;
@protocol UIViewControllerAnimatedTransitioning;
@protocol UIViewControllerInteractiveTransitioning;

SWIFT_CLASS("_TtC20BanubaVideoEditorSDK26SlideInPresentationManager")
@interface SlideInPresentationManager : NSObject <UIViewControllerTransitioningDelegate>
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (UIPresentationController * _Nullable)presentationControllerForPresentedViewController:(UIViewController * _Nonnull)presented presentingViewController:(UIViewController * _Nullable)presenting sourceViewController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForPresentedController:(UIViewController * _Nonnull)presented presentingController:(UIViewController * _Nonnull)presenting sourceController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForDismissedController:(UIViewController * _Nonnull)dismissed SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerInteractiveTransitioning> _Nullable)interactionControllerForPresentation:(id <UIViewControllerAnimatedTransitioning> _Nonnull)animator SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerInteractiveTransitioning> _Nullable)interactionControllerForDismissal:(id <UIViewControllerAnimatedTransitioning> _Nonnull)animator SWIFT_WARN_UNUSED_RESULT;
@end


/// The activity indicator configuration.
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK35SmallActivityIndicatorConfiguration")
@interface SmallActivityIndicatorConfiguration : NSObject
/// The activity indicator line width.
@property (nonatomic) CGFloat activityLineWidth;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The gradient configuration.
SWIFT_CLASS("_TtCC20BanubaVideoEditorSDK35SmallActivityIndicatorConfiguration26GradientColorConfiguration")
@interface GradientColorConfiguration : NSObject
/// The gradient angle.
@property (nonatomic) CGFloat angle;
/// The gradient colors.
@property (nonatomic, strong) NSArray * _Nonnull colors;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// The speed button configuration.
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK24SpeedButtonConfiguration")
@interface SpeedButtonConfiguration : NSObject
/// The half speed image name
@property (nonatomic, copy) NSString * _Nonnull imageNameHalf;
/// The normal speed image name
@property (nonatomic, copy) NSString * _Nonnull imageNameNormal;
/// The double speed image name
@property (nonatomic, copy) NSString * _Nonnull imageNameDouble;
/// The triple speed image name
@property (nonatomic, copy) NSString * _Nonnull imageNameTriple;
/// Initializes and returns the button configuration object with specified speed configurations.
- (nonnull instancetype)initWithImageNameHalf:(NSString * _Nonnull)imageNameHalf imageNameNormal:(NSString * _Nonnull)imageNameNormal imageNameDouble:(NSString * _Nonnull)imageNameDouble imageNameTriple:(NSString * _Nonnull)imageNameTriple OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK17SpeedSelectionBar")
@interface SpeedSelectionBar : UIView
- (void)awakeFromNib;
- (void)drawRect:(CGRect)rect;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



@class SpeedBarConfiguration;

/// The speed selecetion screen configuration.
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK27SpeedSelectionConfiguration")
@interface SpeedSelectionConfiguration : NSObject
/// The back button configuration.
@property (nonatomic, strong) BackButtonConfiguration * _Nonnull backButton;
/// The bottom view background color.
@property (nonatomic, strong) UIColor * _Nonnull bottomViewBackgroundColor;
/// The bottom view corner radius.
@property (nonatomic) CGFloat bottomViewCornerRadius;
/// The screen name label text configuration.
@property (nonatomic, strong) TextConfiguration * _Nonnull screenName;
/// Should hide sceen name label.
@property (nonatomic) BOOL hideScreenName;
/// The speed selection bar configuration.
@property (nonatomic, strong) SpeedBarConfiguration * _Nonnull speedBarConfiguration;
/// Initializes and returns the speed selection screen configuration object with specified configurations.
- (nonnull instancetype)initWithBackButton:(BackButtonConfiguration * _Nonnull)backButton bottomViewBackgroundColor:(UIColor * _Nonnull)bottomViewBackgroundColor bottomViewCornerRadius:(CGFloat)bottomViewCornerRadius screenName:(TextConfiguration * _Nonnull)screenName hideScreenName:(BOOL)hideScreenName speedBarConfiguration:(SpeedBarConfiguration * _Nonnull)speedBarConfiguration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The speed selection bar configuration.
SWIFT_CLASS("_TtCC20BanubaVideoEditorSDK27SpeedSelectionConfiguration21SpeedBarConfiguration")
@interface SpeedBarConfiguration : NSObject
/// The selector view color.
@property (nonatomic, strong) UIColor * _Nonnull selectorColor;
/// The selector view text color.
@property (nonatomic, strong) UIColor * _Nonnull selectorTextColor;
/// The speed selection view background color.
@property (nonatomic, strong) UIColor * _Nonnull speedItemBackgroundColor;
/// The speed selection view corner radius.
@property (nonatomic) CGFloat speedItemCornerRadius;
/// The speed selection view text color.
@property (nonatomic, strong) UIColor * _Nonnull speedItemTextColor;
/// The bar background color.
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
/// The bar corner radius.
@property (nonatomic) CGFloat cornerRadius;
/// The selector views edge insets.
@property (nonatomic) UIEdgeInsets selectorEdgeInsets;
/// Initializes and returns the speed bar configuration object with specified configurations.
- (nonnull instancetype)initWithSelectorColor:(UIColor * _Nonnull)selectorColor selectorTextColor:(UIColor * _Nonnull)selectorTextColor speedItemBackgroundColor:(UIColor * _Nonnull)speedItemBackgroundColor speedItemCornerRadius:(CGFloat)speedItemCornerRadius speedItemTextColor:(UIColor * _Nonnull)speedItemTextColor backgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius selectorEdgeInsets:(UIEdgeInsets)selectorEdgeInsets OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// The button configuration with text styling and text.
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK23TextButtonConfiguration")
@interface TextButtonConfiguration : NSObject
/// The button text configuration.
@property (nonatomic, strong) TextConfiguration * _Nonnull style;
/// The button text.
@property (nonatomic, copy) NSString * _Nullable text;
/// Initializes and returns the button configuration object with text style and optional text.
- (nonnull instancetype)initWithStyle:(TextConfiguration * _Nonnull)style text:(NSString * _Nullable)text OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The text configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK17TextConfiguration")
@interface TextConfiguration : NSObject
/// The kerning of the text.
/// Default is 0
@property (nonatomic) double kern;
/// The font of the text.
@property (nonatomic, strong) UIFont * _Nonnull font;
/// The font of the text.
@property (nonatomic, strong) UIColor * _Nonnull color;
/// The alignment of the text.
/// Default is .center
@property (nonatomic) NSTextAlignment alignment;
/// The optional text
@property (nonatomic, copy) NSString * _Nullable text;
/// Initializes and returns the text configuration object with speicified fields.
- (nonnull instancetype)initWithKern:(double)kern font:(UIFont * _Nonnull)font color:(UIColor * _Nonnull)color alignment:(NSTextAlignment)alignment text:(NSString * _Nullable)text OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The Text editor color item configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK30TextEditColorItemConfiguration")
@interface TextEditColorItemConfiguration : NSObject
/// Item border color
@property (nonatomic, strong) UIColor * _Nonnull borderColor;
/// Item border width
@property (nonatomic) CGFloat borderWidth;
- (nonnull instancetype)initWithBorderColor:(UIColor * _Nonnull)borderColor borderWidth:(CGFloat)borderWidth OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP20BanubaVideoEditorSDK30TextEditSelectionColorBehavior_")
@protocol TextEditSelectionColorBehavior
/// Customize selection behaviour here
- (void)setColorView:(UIView * _Nonnull)view selected:(BOOL)selected animated:(BOOL)animated;
@end

@class NSDictionary;
@class VideoTextColorPair;
@class VideoTextFont;

/// The Text editor configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK23TextEditorConfiguration")
@interface TextEditorConfiguration : NSObject
/// RoundedButtonConfiguration setups done button style
@property (nonatomic, strong) RoundedButtonConfiguration * _Nonnull doneButton;
/// RoundedButtonConfiguration setups choosing font button style
@property (nonatomic, strong) RoundedButtonConfiguration * _Nonnull fontButton;
/// ImageButtonConfiguration setups filling background color button
@property (nonatomic, strong) ImageButtonConfiguration * _Nonnull textBackgroundButton;
/// Images for aligment states button
@property (nonatomic, strong) NSDictionary * _Nonnull alignmentImages;
/// Pallete of filling colors
@property (nonatomic, copy) NSArray<VideoTextColorPair *> * _Nonnull palette;
/// Array of text fonts
@property (nonatomic, copy) NSArray<VideoTextFont *> * _Nonnull fonts;
/// BackgroundConfiguration setups background view style
@property (nonatomic, strong) BackgroundConfiguration * _Nonnull backgroundConfiguration;
/// ScreenNameConfiguration setups screen title style
@property (nonatomic, strong) ScreenNameConfiguration * _Nonnull screenNameConfiguration;
/// Color pallete inset
@property (nonatomic) UIEdgeInsets palleteInsets;
/// TextEditSelectionColorBehavior setups text editor selection color behavior
@property (nonatomic, strong) id <TextEditSelectionColorBehavior> _Nonnull selectionColorBehavior;
/// TextEditColorItemConfiguration setups pallete’s color items’ configuration
@property (nonatomic, strong) TextEditColorItemConfiguration * _Nonnull colorItemConfiguration;
- (nonnull instancetype)initWithDoneButton:(RoundedButtonConfiguration * _Nonnull)doneButton fontButton:(RoundedButtonConfiguration * _Nonnull)fontButton textBackgroundButton:(ImageButtonConfiguration * _Nonnull)textBackgroundButton alignmentImages:(NSDictionary * _Nonnull)alignmentImages palette:(NSArray<VideoTextColorPair *> * _Nonnull)palette fonts:(NSArray<VideoTextFont *> * _Nonnull)fonts backgroundConfiguration:(BackgroundConfiguration * _Nonnull)backgroundConfiguration screenNameConfiguration:(ScreenNameConfiguration * _Nonnull)screenNameConfiguration palleteInsets:(UIEdgeInsets)palleteInsets selectionColorBehavior:(id <TextEditSelectionColorBehavior> _Nonnull)selectionColorBehavior colorItemConfiguration:(TextEditColorItemConfiguration * _Nonnull)colorItemConfiguration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class TextParams;

SWIFT_CLASS("_TtC20BanubaVideoEditorSDK19TextOnVideoMetadata")
@interface TextOnVideoMetadata : NSObject
@property (nonatomic, readonly, copy) NSData * _Nullable imageData;
@property (nonatomic, readonly, strong) TextParams * _Nonnull textParams;
@property (nonatomic, readonly, strong) TimeMetadata * _Nonnull startTime;
@property (nonatomic, readonly, strong) TimeMetadata * _Nonnull endTime;
@property (nonatomic, readonly, strong) CoordinatesParams * _Nonnull coordinatesParams;
- (nonnull instancetype)initWithImageData:(NSData * _Nullable)imageData textParams:(TextParams * _Nonnull)textParams startTime:(TimeMetadata * _Nonnull)startTime endTime:(TimeMetadata * _Nonnull)endTime coordinatesParams:(CoordinatesParams * _Nonnull)coordinatesParams OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK10TextParams")
@interface TextParams : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The trimmer time label configuration.
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK22TimeLabelConfiguration")
@interface TimeLabelConfiguration : NSObject
/// The text edge insets.
@property (nonatomic) UIEdgeInsets textInsets;
/// The corner radius of label.
@property (nonatomic) CGFloat cornerRadius;
/// The normal state label color.
@property (nonatomic, strong) UIColor * _Nonnull defaultColor;
/// The error state label color.
@property (nonatomic, strong) UIColor * _Nonnull errorColor;
/// The label style configuration.
@property (nonatomic, strong) TextConfiguration * _Nonnull style;
/// Initializes and returns the trimmer time label configuration object with specified configurations.
- (nonnull instancetype)initWithTextInsets:(UIEdgeInsets)textInsets cornerRadius:(CGFloat)cornerRadius defaultColor:(UIColor * _Nonnull)defaultColor errorColor:(UIColor * _Nonnull)errorColor style:(TextConfiguration * _Nonnull)style OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// The time line configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK21TimeLineConfiguration")
@interface TimeLineConfiguration : NSObject
/// Property setups ‘isHidden’  option for the time line view
@property (nonatomic) BOOL isTimeLineHidden;
/// Time line background color
@property (nonatomic, strong) UIColor * _Nonnull timeLineBackgroundColor;
/// Progress bar color
@property (nonatomic, strong) UIColor * _Nonnull progressBarColor;
/// Progress bar color for selecting state
@property (nonatomic, strong) UIColor * _Nonnull progressBarSelectColor;
/// Thumbnail item corner radius
@property (nonatomic) CGFloat itemsCornerRadius;
/// Separator width
@property (nonatomic) CGFloat separatorWidth;
/// Separator color
@property (nonatomic, strong) UIColor * _Nonnull separatorColor;
/// Value setups progress bar as dynamic sequence
@property (nonatomic) BOOL isDynamicProgressBar;
- (nonnull instancetype)initWithIsTimeLineHidden:(BOOL)isTimeLineHidden timeLineBackgroundColor:(UIColor * _Nonnull)timeLineBackgroundColor progressBarColor:(UIColor * _Nonnull)progressBarColor progressBarSelectColor:(UIColor * _Nonnull)progressBarSelectColor itemsCornerRadius:(CGFloat)itemsCornerRadius separatorWidth:(CGFloat)separatorWidth separatorColor:(UIColor * _Nonnull)separatorColor isDynamicProgressBar:(BOOL)isDynamicProgressBar OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK12TimeMetadata")
@interface TimeMetadata : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface TimeMetadata (SWIFT_EXTENSION(BanubaVideoEditorSDK))
- (nonnull instancetype)initWithCmTime:(CMTime)cmTime;
- (CMTime)getCMTime SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK22TimelineViewController")
@interface TimelineViewController : UIViewController
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end





@class TimerOptionConfiguration;

/// The timer configuration.
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK18TimerConfiguration")
@interface TimerConfiguration : NSObject
/// The default imaged button configuration.
@property (nonatomic, strong) ImageButtonConfiguration * _Nonnull defaultButton;
/// The timer options.
@property (nonatomic, copy) NSArray<TimerOptionConfiguration *> * _Nonnull options;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The timer option configuration.
SWIFT_CLASS("_TtCC20BanubaVideoEditorSDK18TimerConfiguration24TimerOptionConfiguration")
@interface TimerOptionConfiguration : NSObject
/// The imaged button configuration.
@property (nonatomic, strong) ImageButtonConfiguration * _Nonnull button;
/// The starting timer seconds value.
@property (nonatomic) NSInteger startingTimerSeconds;
/// The stopping timer seconds value.
@property (nonatomic) NSInteger stoppingTimerSeconds;
/// The description value which will be displayed after selection timer option at timer button.
/// Default valus is nil.
@property (nonatomic, copy) NSString * _Nullable timerConfigurationDescription;
/// Initializes and returns the timer option configuration object with specified configurations.
- (nonnull instancetype)initWithButton:(ImageButtonConfiguration * _Nonnull)button startingTimerSeconds:(NSInteger)startingTimerSeconds stoppingTimerSeconds:(NSInteger)stoppingTimerSeconds description:(NSString * _Nullable)description OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The toast configuration.
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK18ToastConfiguration")
@interface ToastConfiguration : NSObject
/// The kerning of the presented text.
@property (nonatomic) double kern;
/// The font of the presented text.
@property (nonatomic, strong) UIFont * _Nonnull font;
/// The toast corner of radius.
@property (nonatomic) CGFloat cornerRadius;
/// The toast text color
/// Default is white
@property (nonatomic, strong) UIColor * _Nonnull textColor;
/// The toast background color
/// Default is black
@property (nonatomic, strong) UIColor * _Nonnull backroundColor;
/// Initializes and returns the toast configuration object with specified configurations.
- (nonnull instancetype)initWithKern:(double)kern font:(UIFont * _Nonnull)font cornerRadius:(CGFloat)cornerRadius textColor:(UIColor * _Nonnull)textColor backroundColor:(UIColor * _Nonnull)backroundColor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// The Trim video parts configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK29TrimGalleryVideoConfiguration")
@interface TrimGalleryVideoConfiguration : NSObject
/// VideoResolutionConfiguration setups editor options for rendering video
@property (nonatomic, strong) VideoResolutionConfiguration * _Nonnull videoResolutionConfiguration;
/// SmallActivityIndicatorConfiguration setups activity indicator style
@property (nonatomic, strong) SmallActivityIndicatorConfiguration * _Nonnull activityIndicatorConfiguration;
/// ImageButtonConfiguration setups delete video part button style
@property (nonatomic, strong) ImageButtonConfiguration * _Nonnull deleteGalleryVideoPartButtonConfiguration;
/// GalleryVideoPartsConfiguration setups video parts styles
@property (nonatomic, strong) GalleryVideoPartsConfiguration * _Nonnull galleryVideoPartsConfiguration;
/// BackButtonConfiguration setups back button style
@property (nonatomic, strong) BackButtonConfiguration * _Nonnull backButtonConfiguration;
/// BackButtonConfiguration setups next button style
@property (nonatomic, strong) SaveButtonConfiguration * _Nonnull nextButtonConfiguration;
/// TextConfiguration setups delete video part button style
@property (nonatomic, strong) TextConfiguration * _Nonnull deleteToolTipLabel;
/// PlayerControlConfiguration setups play/pause button style
@property (nonatomic, strong) PlayerControlConfiguration * _Nonnull playerControlConfiguration;
/// BackgroundConfiguration setups video parts background style
@property (nonatomic, strong) BackgroundConfiguration * _Nonnull videoPartsBackgroundConfiguration;
/// BackgroundConfiguration setups background style
@property (nonatomic, strong) BackgroundConfiguration * _Nonnull backgroundConfiguration;
/// ScreenNameConfiguration setups screen title style
@property (nonatomic, strong) ScreenNameConfiguration * _Nonnull screenNameConfiguration;
/// TimeLabelConfiguration setups current duration view style
@property (nonatomic, strong) TimeLabelConfiguration * _Nonnull editedTimeLabelConfiguration;
- (nonnull instancetype)initWithVideoResolutionConfiguration:(VideoResolutionConfiguration * _Nonnull)videoResolutionConfiguration activityIndicatorConfiguration:(SmallActivityIndicatorConfiguration * _Nonnull)activityIndicatorConfiguration deleteGalleryVideoPartButtonConfiguration:(ImageButtonConfiguration * _Nonnull)deleteGalleryVideoPartButtonConfiguration galleryVideoPartsConfiguration:(GalleryVideoPartsConfiguration * _Nonnull)galleryVideoPartsConfiguration backButtonConfiguration:(BackButtonConfiguration * _Nonnull)backButtonConfiguration nextButtonConfiguration:(SaveButtonConfiguration * _Nonnull)nextButtonConfiguration deleteToolTipLabel:(TextConfiguration * _Nonnull)deleteToolTipLabel playerControlConfiguration:(PlayerControlConfiguration * _Nonnull)playerControlConfiguration videoPartsBackgroundConfiguration:(BackgroundConfiguration * _Nonnull)videoPartsBackgroundConfiguration backgroundConfiguration:(BackgroundConfiguration * _Nonnull)backgroundConfiguration screenNameConfiguration:(ScreenNameConfiguration * _Nonnull)screenNameConfiguration editedTimeLabelConfiguration:(TimeLabelConfiguration * _Nonnull)editedTimeLabelConfiguration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// The Time line configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK25TrimTimeLineConfiguration")
@interface TrimTimeLineConfiguration : NSObject
/// Draggers color when max duration reached
@property (nonatomic, strong) UIColor * _Nonnull maxColor;
/// Draggers default colors
@property (nonatomic, strong) UIColor * _Nonnull defaultColor;
/// Controls color
@property (nonatomic, strong) UIColor * _Nonnull trimControlsColor;
/// Cursor color
@property (nonatomic, strong) UIColor * _Nonnull cursorColor;
/// Draggers line color
@property (nonatomic, strong) UIColor * _Nonnull draggersLineColor;
/// Draggers corner radius
@property (nonatomic) CGFloat draggersCornerRadius;
/// Draggers line width
@property (nonatomic) CGFloat draggersLineWidth;
/// Draggers line height
@property (nonatomic) CGFloat draggersLineHeight;
/// Number of lines in draggers
@property (nonatomic) NSInteger numberOfLinesInDraggers;
/// Draggers line spacing
@property (nonatomic) CGFloat draggerLinesSpacing;
/// Time lime borders line width
@property (nonatomic) CGFloat borderWidth;
/// Draggers line corner radius
@property (nonatomic) CGFloat draggersLineCornerRadius;
/// TextButtonConfiguration setups cancel button style
@property (nonatomic, strong) TextButtonConfiguration * _Nonnull cancelButtonConfiguration;
/// TextButtonConfiguration setups done button style
@property (nonatomic, strong) TextButtonConfiguration * _Nonnull doneButtonConfiguration;
/// ImageName setups draggers UIImage
@property (nonatomic, copy) NSString * _Nullable draggerImageName;
/// Draggers frame width
@property (nonatomic) CGFloat draggerWidth;
/// Time line inset
@property (nonatomic) CGFloat timelineTopBottomInset;
/// VideoResolutionConfiguration setups trim options for rendering video
@property (nonatomic, strong) VideoResolutionConfiguration * _Nonnull videoResolution;
- (nonnull instancetype)initWithMaxColor:(UIColor * _Nonnull)maxColor defaultColor:(UIColor * _Nonnull)defaultColor trimControlsColor:(UIColor * _Nonnull)trimControlsColor cursorColor:(UIColor * _Nonnull)cursorColor draggersLineColor:(UIColor * _Nonnull)draggersLineColor draggersCornerRadius:(CGFloat)draggersCornerRadius draggersLineWidth:(CGFloat)draggersLineWidth draggersLineHeight:(CGFloat)draggersLineHeight numberOfLinesInDraggers:(NSInteger)numberOfLinesInDraggers draggerLinesSpacing:(CGFloat)draggerLinesSpacing borderWidth:(CGFloat)borderWidth draggersLineCornerRadius:(CGFloat)draggersLineCornerRadius cancelButtonConfiguration:(TextButtonConfiguration * _Nonnull)cancelButtonConfiguration doneButtonConfiguration:(TextButtonConfiguration * _Nonnull)doneButtonConfiguration draggerImageName:(NSString * _Nullable)draggerImageName draggerWidth:(CGFloat)draggerWidth timelineTopBottomInset:(CGFloat)timelineTopBottomInset videoResolution:(VideoResolutionConfiguration * _Nonnull)videoResolution OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


















/// Video cover selection screen configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK32VideoCoverSelectionConfiguration")
@interface VideoCoverSelectionConfiguration : NSObject
/// The cancel button configuration
@property (nonatomic, strong) TextButtonConfiguration * _Nonnull cancelButton;
/// The done button configuration
@property (nonatomic, strong) TextButtonConfiguration * _Nonnull doneButton;
/// The title laber configuration
@property (nonatomic, strong) TextConfiguration * _Nullable titleLabel;
/// The tooltip label configuration
@property (nonatomic, strong) TextConfiguration * _Nonnull toolTipLabel;
/// The selector view color
@property (nonatomic, strong) UIColor * _Nonnull selectorColor;
/// Select cover from gallery button configuration
@property (nonatomic, strong) BanubaButtonConfiguration * _Nonnull selectGalleryImageButton;
/// Delete cover from gallery button configuration
@property (nonatomic, strong) BanubaButtonConfiguration * _Nonnull deleteImageButtonImageConfiguration;
/// The background configuration
@property (nonatomic, strong) BackgroundConfiguration * _Nonnull backgroundConfiguration;
/// The preview view background configuration
@property (nonatomic, strong) BackgroundConfiguration * _Nonnull previewBackgroundConfiguration;
/// The thumbnails Curosr Configuration
@property (nonatomic, strong) ImageButtonConfiguration * _Nonnull thumbnailsCursorConfiguration;
/// The number of thumbnails
@property (nonatomic) NSInteger numberOfThumbnails;
- (nonnull instancetype)initWithCancelButton:(TextButtonConfiguration * _Nonnull)cancelButton doneButton:(TextButtonConfiguration * _Nonnull)doneButton titleLabel:(TextConfiguration * _Nullable)titleLabel toolTipLabel:(TextConfiguration * _Nonnull)toolTipLabel selectorColor:(UIColor * _Nonnull)selectorColor selectGalleryImageButton:(BanubaButtonConfiguration * _Nonnull)selectGalleryImageButton deleteImageButtonImageConfiguration:(BanubaButtonConfiguration * _Nonnull)deleteImageButtonImageConfiguration backgroundConfiguration:(BackgroundConfiguration * _Nonnull)backgroundConfiguration previewBackgroundConfiguration:(BackgroundConfiguration * _Nonnull)previewBackgroundConfiguration thumbnailsCursorConfiguration:(ImageButtonConfiguration * _Nonnull)thumbnailsCursorConfiguration numberOfThumbnails:(NSInteger)numberOfThumbnails OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC20BanubaVideoEditorSDK33VideoCoverSelectionViewController")
@interface VideoCoverSelectionViewController : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end




@class UIImagePickerController;

@interface VideoCoverSelectionViewController (SWIFT_EXTENSION(BanubaVideoEditorSDK)) <UIImagePickerControllerDelegate, UINavigationControllerDelegate>
- (void)imagePickerController:(UIImagePickerController * _Nonnull)picker didFinishPickingMediaWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
- (void)imagePickerControllerDidCancel:(UIImagePickerController * _Nonnull)picker;
@end



SWIFT_CLASS("_TtC20BanubaVideoEditorSDK28VideoEditorActivityIndicator")
@interface VideoEditorActivityIndicator : UIView
@property (nonatomic) CGRect bounds;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_PROTOCOL("_TtP20BanubaVideoEditorSDK32VideoEditorCaptureButtonDelegate_")
@protocol VideoEditorCaptureButtonDelegate
- (void)сaptureButtonGotTapEvent;
- (void)сaptureButtonGotLongTapEvent;
- (void)сaptureButtonDropLongTapEvent;
@end


/// The capture button view provider.
SWIFT_PROTOCOL("_TtP20BanubaVideoEditorSDK32VideoEditorCaptureButtonProvider_")
@protocol VideoEditorCaptureButtonProvider
- (id <VideoEditorCaptureButton> _Nullable)getButton SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, VideoEditorCaptureButtonState, open) {
  VideoEditorCaptureButtonStateIdle = 0,
  VideoEditorCaptureButtonStateCapture = 1,
};

@class VideoOverlayConfiguration;
@class VideoEditorDurationConfig;
@class MusicEditorConfig;
@class OverlayEditorConfiguration;
@class WatermarkConfiguration;

SWIFT_CLASS("_TtC20BanubaVideoEditorSDK17VideoEditorConfig")
@interface VideoEditorConfig : NSObject
@property (nonatomic, strong) VideoResolutionConfiguration * _Nonnull videoResolutionConfiguration;
@property (nonatomic, strong) RecorderConfiguration * _Nonnull recorderConfiguration;
@property (nonatomic, strong) EditorConfiguration * _Nonnull editorConfiguration;
@property (nonatomic, strong) SingleTrimConfiguration * _Nonnull singleTrimConfiguration;
@property (nonatomic, strong) TextEditorConfiguration * _Nonnull textEditorConfiguration;
@property (nonatomic, strong) ToastConfiguration * _Nonnull toastConfiguration;
@property (nonatomic, strong) FullScreenActivityConfiguration * _Nonnull fullScreenActivityConfiguration;
@property (nonatomic, strong) SmallActivityIndicatorConfiguration * _Nonnull smallActivityIndicatorConfiguration;
@property (nonatomic, strong) AlbumsConfiguration * _Nonnull albumsConfiguration;
@property (nonatomic, strong) VideoOverlayConfiguration * _Nonnull videoOverlayConfiguration;
@property (nonatomic, strong) VideoEditorDurationConfig * _Nonnull videoDurationConfiguration;
@property (nonatomic, strong) GifPickerConfiguration * _Nonnull gifPickerConfiguration;
@property (nonatomic, strong) CombinedGalleryConfiguration * _Nonnull combinedGalleryConfiguration;
@property (nonatomic, strong) TrimTimeLineConfiguration * _Nullable trimTimeLineConfiguration;
@property (nonatomic, strong) GalleryConfiguration * _Nonnull galleryConfiguration;
@property (nonatomic, strong) TrimGalleryVideoConfiguration * _Nonnull trimGalleryVideoConfiguration;
@property (nonatomic, strong) FilterConfiguration * _Nonnull filterConfiguration;
@property (nonatomic, strong) SimpleVideoCoverSelectionConfiguration * _Nonnull videoCoverSelectionConfiguration;
@property (nonatomic, strong) VideoCoverSelectionConfiguration * _Nonnull extendedVideoCoverSelectionConfiguration;
@property (nonatomic, strong) MusicEditorConfig * _Nonnull musicEditorConfiguration;
@property (nonatomic, strong) OverlayEditorConfiguration * _Nonnull overlayEditorConfiguration;
@property (nonatomic, strong) MultiTrimConfiguration * _Nonnull multiTrimConfiguration;
@property (nonatomic, strong) WatermarkConfiguration * _Nullable watermarkConfiguration;
@property (nonatomic, strong) SpeedSelectionConfiguration * _Nonnull speedSelectionConfiguration;
@property (nonatomic, strong) AlertViewConfiguration * _Nonnull alertViewConfiguration;
@property (nonatomic, strong) HandsfreeConfiguration * _Nullable handsfreeConfiguration;
@property (nonatomic, strong) FeatureConfiguration * _Nonnull featureConfiguration;
@property (nonatomic) BOOL isHandfreeEnabled;
- (nonnull instancetype)init;
- (nonnull instancetype)initWithVideoResolutionConfiguration:(VideoResolutionConfiguration * _Nonnull)videoResolutionConfiguration recorderConfiguration:(RecorderConfiguration * _Nonnull)recorderConfiguration editorConfiguration:(EditorConfiguration * _Nonnull)editorConfiguration singleTrimConfiguration:(SingleTrimConfiguration * _Nonnull)singleTrimConfiguration textEditorConfiguration:(TextEditorConfiguration * _Nonnull)textEditorConfiguration toastConfiguration:(ToastConfiguration * _Nonnull)toastConfiguration fullScreenActivityConfiguration:(FullScreenActivityConfiguration * _Nonnull)fullScreenActivityConfiguration smallActivityIndicatorConfiguration:(SmallActivityIndicatorConfiguration * _Nonnull)smallActivityIndicatorConfiguration albumsConfiguration:(AlbumsConfiguration * _Nonnull)albumsConfiguration videoOverlayConfiguration:(VideoOverlayConfiguration * _Nonnull)videoOverlayConfiguration videoDurationConfiguration:(VideoEditorDurationConfig * _Nonnull)videoDurationConfiguration gifPickerConfiguration:(GifPickerConfiguration * _Nonnull)gifPickerConfiguration combinedGalleryConfiguration:(CombinedGalleryConfiguration * _Nonnull)combinedGalleryConfiguration trimTimeLineConfiguration:(TrimTimeLineConfiguration * _Nonnull)trimTimeLineConfiguration galleryConfiguration:(GalleryConfiguration * _Nonnull)galleryConfiguration trimGalleryVideoConfiguration:(TrimGalleryVideoConfiguration * _Nonnull)trimGalleryVideoConfiguration filterConfiguration:(FilterConfiguration * _Nonnull)filterConfiguration videoCoverSelectionConfiguration:(SimpleVideoCoverSelectionConfiguration * _Nonnull)videoCoverSelectionConfiguration extendedVideoCoverSelectionConfiguration:(VideoCoverSelectionConfiguration * _Nonnull)extendedVideoCoverSelectionConfiguration musicEditorConfiguration:(MusicEditorConfig * _Nonnull)musicEditorConfiguration overlayEditorConfiguration:(OverlayEditorConfiguration * _Nonnull)overlayEditorConfiguration featureConfiguration:(FeatureConfiguration * _Nonnull)featureConfiguration multiTrimConfiguration:(MultiTrimConfiguration * _Nonnull)multiTrimConfiguration watermarkConfiguration:(WatermarkConfiguration * _Nullable)watermarkConfiguration speedSelectionConfiguration:(SpeedSelectionConfiguration * _Nonnull)speedSelectionConfiguration alertViewConfiguration:(AlertViewConfiguration * _Nonnull)alertViewConfiguration handsfreeConfiguration:(HandsfreeConfiguration * _Nullable)handsfreeConfiguration OBJC_DESIGNATED_INITIALIZER;
- (void)applyFont:(UIFont * _Nonnull)font;
- (void)updateAlertFonts:(UIFont * _Nonnull)font;
- (void)updateRecorderFonts:(UIFont * _Nonnull)font;
- (void)updateMultiTrimFonts:(UIFont * _Nonnull)font;
- (void)updateEditorFonts:(UIFont * _Nonnull)font;
- (void)updateSingleTrimFonts:(UIFont * _Nonnull)font;
- (void)updateToastFonts:(UIFont * _Nonnull)font;
- (void)updateFullScreenActivityFonts:(UIFont * _Nonnull)font;
- (void)updateAlbumsFonts:(UIFont * _Nonnull)font;
- (void)updateTextEditorFonts:(UIFont * _Nonnull)font;
- (void)updateSlideShowFonts:(UIFont * _Nonnull)font;
- (void)updateGalleryFonts:(UIFont * _Nonnull)font;
- (void)updateTrimGalleryVideoFonts:(UIFont * _Nonnull)font;
- (void)updateFilterFonts:(UIFont * _Nonnull)font;
- (void)updateVideoCoverSelectionFonts:(UIFont * _Nonnull)font;
- (void)updateFeatureConfigurationWithFeatureConfiguration:(FeatureConfiguration * _Nonnull)featureConfiguration;
@end


/// The video duration configuration.
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK25VideoEditorDurationConfig")
@interface VideoEditorDurationConfig : NSObject
/// The video maximum duration
/// Default is 60.0.
@property (nonatomic) NSTimeInterval maximumVideoDuration;
/// The video minimum duration captured from a camera
/// Default is 3.0.
@property (nonatomic) NSTimeInterval minimumDurationFromCamera;
/// The video minimum duration from a gallery
/// Default is 3.0.
@property (nonatomic) NSTimeInterval minimumDurationFromGallery;
/// The video minimum duration
/// Default is 3.0.
@property (nonatomic) NSTimeInterval minimumVideoDuration;
/// The video part minimum duration
/// Default is 2.0.
@property (nonatomic) NSTimeInterval minimumTrimmedPartDuration;
/// The minimimum recorded video duration to show timer animation at the end
/// Default is 10.0.
@property (nonatomic) NSTimeInterval minimumRecordingTimeToPlayCountdownAnimation;
- (nonnull instancetype)initWithMaximumVideoDuration:(NSTimeInterval)maximumVideoDuration minimumDurationFromCamera:(NSTimeInterval)minimumDurationFromCamera minimumDurationFromGallery:(NSTimeInterval)minimumDurationFromGallery minimumVideoDuration:(NSTimeInterval)minimumVideoDuration minimumTrimmedPartDuration:(NSTimeInterval)minimumTrimmedPartDuration minimumRecordingTimeToPlayCountdownAnimation:(NSTimeInterval)minimumRecordingTimeToPlayCountdownAnimation OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isValidMaxDurationWithTolerance:(NSTimeInterval)duration SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class VideoInteractiveMetadata;
@class VideoMetadata;

SWIFT_CLASS("_TtC20BanubaVideoEditorSDK19VideoEditorMetadata")
@interface VideoEditorMetadata : NSObject
@property (nonatomic, readonly, copy) NSArray<EffectOnVideoMetadata *> * _Nullable effectsOnVideoMetadata;
@property (nonatomic, readonly, strong) ColorOnVideoMetadata * _Nullable colorOnVideoMetadata;
@property (nonatomic, readonly, copy) NSArray<TextOnVideoMetadata *> * _Nullable textOnVideoMetadata;
@property (nonatomic, readonly, copy) NSArray<GIFOnVideoMetadata *> * _Nullable gifOnVideoMetadata;
@property (nonatomic, readonly, strong) VideoInteractiveMetadata * _Nonnull videoInteractiveMetadata;
@property (nonatomic, strong) VideoMetadata * _Nullable videoMetadata;
- (nonnull instancetype)initWithEffectsOnVideoMetadata:(NSArray<EffectOnVideoMetadata *> * _Nullable)effectsOnVideoMetadata colorOnVideoMetadata:(ColorOnVideoMetadata * _Nullable)colorOnVideoMetadata textOnVideoMetadata:(NSArray<TextOnVideoMetadata *> * _Nullable)textOnVideoMetadata gifOnVideoMetadata:(NSArray<GIFOnVideoMetadata *> * _Nullable)gifOnVideoMetadata videoInteractiveMetadata:(VideoInteractiveMetadata * _Nonnull)videoInteractiveMetadata videoMetadata:(VideoMetadata * _Nullable)videoMetadata OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK23VideoEditorTrimMetadata")
@interface VideoEditorTrimMetadata : NSObject
@property (nonatomic, copy) NSURL * _Nonnull url;
@property (nonatomic, copy) NSData * _Nullable imageData;
- (nonnull instancetype)initWithUrl:(NSURL * _Nonnull)url imageData:(NSData * _Nullable)imageData OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK24VideoInteractiveMetadata")
@interface VideoInteractiveMetadata : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK13VideoMetadata")
@interface VideoMetadata : NSObject
@property (nonatomic, readonly) BOOL isSlideShow;
- (nonnull instancetype)initWithIsSlideShow:(BOOL)isSlideShow OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The Overlay configuration
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK25VideoOverlayConfiguration")
@interface VideoOverlayConfiguration : NSObject
/// ImageConfiguration setups delete button style
@property (nonatomic, strong) ImageConfiguration * _Nonnull deleteImageConfiguration;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



typedef SWIFT_ENUM(NSInteger, VideoTextAligment, open) {
  VideoTextAligmentLeft = 0,
  VideoTextAligmentCenter = 1,
  VideoTextAligmentRight = 2,
};


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK18VideoTextColorPair")
@interface VideoTextColorPair : NSObject
@property (nonatomic, readonly, strong) ColorPair * _Nonnull foreground;
@property (nonatomic, readonly, strong) ColorPair * _Nonnull background;
- (nonnull instancetype)initWithColor0:(UIColor * _Nonnull)color0 color1:(UIColor * _Nonnull)color1 color2:(UIColor * _Nonnull)color2 color3:(UIColor * _Nonnull)color3;
- (nonnull instancetype)initWithForeground:(ColorPair * _Nonnull)foreground background:(ColorPair * _Nonnull)background OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20BanubaVideoEditorSDK13VideoTextFont")
@interface VideoTextFont : NSObject
@property (nonatomic, strong) UIFont * _Nullable font;
@property (nonatomic, copy) NSString * _Nonnull name;
- (nonnull instancetype)initWithFont:(UIFont * _Nullable)font name:(NSString * _Nonnull)name OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum WatermarkPosition : NSInteger;

/// The watermark configuration.
SWIFT_CLASS("_TtC20BanubaVideoEditorSDK22WatermarkConfiguration")
@interface WatermarkConfiguration : NSObject
/// The watermark image configuration
@property (nonatomic, strong) ImageConfiguration * _Nonnull watermark;
/// The watermark size configuration.
@property (nonatomic) CGSize size;
/// The watermark offset from edges.
@property (nonatomic) CGFloat sharedOffset;
/// The watermark position.
@property (nonatomic) enum WatermarkPosition position;
/// Initializes and returns the watermark configuration object with specified configurations.
- (nonnull instancetype)initWithWatermark:(ImageConfiguration * _Nonnull)watermark size:(CGSize)size sharedOffset:(CGFloat)sharedOffset position:(enum WatermarkPosition)position OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, WatermarkPosition, open) {
  WatermarkPositionLeftTop = 0,
  WatermarkPositionLeftBottom = 1,
  WatermarkPositionRightTop = 2,
  WatermarkPositionRightBottom = 3,
};


#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
